{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robin\\\\Desktop\\\\Library\\\\Library-React\\\\my-app\\\\src\\\\components\\\\auth\\\\AuthInformation.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { useOktaAuth } from '@okta/okta-react';\n\nconst AuthInformation = () => {\n  const {\n    authState,\n    authService\n  } = useOktaAuth();\n  const accessToken = authState.accessToken;\n  const [userInfo, setUserInfo] = useState(null);\n  useEffect(() => {\n    if (!authState.isAuthenticated) {\n      setUserInfo(null);\n    } else {\n      authService.getUser().then(info => {\n        setUserInfo(info);\n      });\n    }\n  }, [authState, authService]); // Update if authState changes\n\n  const button = authState.isAuthenticated ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      authService.logout();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, \"Logout\") : /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      authService.login();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, \"Login\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, button, userInfo && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Add books\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"View orders\")));\n};\n\nexport default AuthInformation;","map":{"version":3,"sources":["C:/Users/robin/Desktop/Library/Library-React/my-app/src/components/auth/AuthInformation.js"],"names":["React","useState","useEffect","Link","useOktaAuth","AuthInformation","authState","authService","accessToken","userInfo","setUserInfo","isAuthenticated","getUser","then","info","button","logout","login"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC5B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA6BH,WAAW,EAA9C;AACA,QAAMI,WAAW,GAAGF,SAAS,CAACE,WAA9B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACI,SAAS,CAACK,eAAf,EAAgC;AAE9BD,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAHD,MAGO;AACLH,MAAAA,WAAW,CAACK,OAAZ,GAAsBC,IAAtB,CAA2BC,IAAI,IAAI;AACjCJ,QAAAA,WAAW,CAACI,IAAD,CAAX;AACD,OAFD;AAGD;AACF,GATQ,EASN,CAACR,SAAD,EAAYC,WAAZ,CATM,CAAT,CAJ4B,CAaE;;AAG9B,QAAMQ,MAAM,GAAGT,SAAS,CAACK,eAAV,gBACb;AAAQ,IAAA,OAAO,EAAE,MAAM;AAACJ,MAAAA,WAAW,CAACS,MAAZ;AAAqB,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADa,gBAEb;AAAQ,IAAA,OAAO,EAAE,MAAM;AAACT,MAAAA,WAAW,CAACU,KAAZ;AAAoB,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF;AAQA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MADH,EAEGN,QAAQ,iBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFA,CAHJ,CADF;AAWD,CAnCD;;AAoCA,eAAeJ,eAAf","sourcesContent":["import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useOktaAuth } from '@okta/okta-react';\r\n\r\nconst AuthInformation = () => {\r\n  const { authState, authService } = useOktaAuth();\r\n  const accessToken = authState.accessToken;\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  useEffect(() => {\r\n    if (!authState.isAuthenticated) {\r\n      \r\n      setUserInfo(null);\r\n    } else {\r\n      authService.getUser().then(info => {\r\n        setUserInfo(info);\r\n      });\r\n    }\r\n  }, [authState, authService]); // Update if authState changes\r\n\r\n\r\n  const button = authState.isAuthenticated ?\r\n    <button onClick={() => {authService.logout()}}>Logout</button> :\r\n    <button onClick={() => {authService.login()}}>Login</button>;\r\n\r\n \r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      {button}\r\n      {userInfo && (\r\n        <div>\r\n        <li>Add books</li>\r\n        <li>View orders</li>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default AuthInformation;"]},"metadata":{},"sourceType":"module"}