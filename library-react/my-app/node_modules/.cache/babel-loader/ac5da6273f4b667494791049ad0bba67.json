{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robin\\\\Desktop\\\\Library\\\\Library-React\\\\my-app\\\\src\\\\components\\\\admin\\\\BookEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { instanceOf } from 'prop-types';\nimport './bookedit.css';\n\nclass BookEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.emptyItem = {\n      bookId: '',\n      title: '',\n      pages: '',\n      year: '',\n      authors: [],\n      imageLink: '',\n      inStore: ''\n    };\n    this.state = {\n      item: this.emptyItem\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    if (this.props.match.params.id !== 'new') {\n      try {\n        const group = await (await fetch(`/catalog/api/v1/books/${this.props.match.params.id}`)).json();\n        this.setState({\n          item: group\n        });\n      } catch (error) {\n        this.props.history.push('/');\n      }\n    }\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    let item = { ...this.state.item\n    };\n\n    if (name === 'authors') {\n      item[name].authors[name] = value;\n    }\n\n    item[name] = value;\n    this.setState({\n      item\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const {\n      item\n    } = this.state;\n    console.log(item);\n    await fetch('/book/ai/v1/books' + (item.bookId ? '/' + item.bookId : ''), {\n      method: item.id ? 'PUT' : 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    });\n    this.props.history.push('/groups');\n  }\n\n  render() {\n    const {\n      item\n    } = this.state;\n    const title = /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, item.id ? 'Edit Book' : 'Add New Book');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, title, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"title\",\n      id: \"title\",\n      value: item.title || '',\n      onChange: this.handleChange,\n      autoComplete: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"pages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, \"Pages\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"pages\",\n      id: \"pages\",\n      value: item.pages || '',\n      onChange: this.handleChange,\n      autoComplete: \"pages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, \"Year\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"year\",\n      id: \"year\",\n      value: item.year || '',\n      onChange: this.handleChange,\n      autoComplete: \"year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"authors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, \"Authors\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"authors\",\n      id: \"authors\",\n      value: item.authors || '',\n      onChange: this.handleChange,\n      autoComplete: \"authors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"imageLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, \"Imagelink\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"imageLink\",\n      id: \"imageLink\",\n      value: item.imageLink || '',\n      onChange: this.handleChange,\n      autoComplete: \"imageLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"inStore\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, \"Available now\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"inStore\",\n      id: \"inStore\",\n      value: item.inStore || '',\n      onChange: this.handleChange,\n      autoComplete: \"inStore\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, \"Save\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      tag: Link,\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, \"Cancel\")))));\n  }\n\n}\n\nexport default withRouter(BookEdit);","map":{"version":3,"sources":["C:/Users/robin/Desktop/Library/Library-React/my-app/src/components/admin/BookEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","instanceOf","BookEdit","constructor","props","emptyItem","bookId","title","pages","year","authors","imageLink","inStore","state","item","handleChange","bind","handleSubmit","componentDidMount","match","params","id","group","fetch","json","setState","error","history","push","event","target","value","name","preventDefault","console","log","method","headers","body","JSON","stringify","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { instanceOf } from 'prop-types';\r\nimport './bookedit.css'\r\n\r\nclass BookEdit extends Component {\r\n \r\n  emptyItem = {\r\n    bookId: '',\r\n    title: '',\r\n    pages: '',\r\n    year: '',\r\n    authors : [],\r\n    imageLink: '',\r\n    inStore: ''\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      try {\r\n        const group = await (await fetch(`/catalog/api/v1/books/${this.props.match.params.id}`)).json();\r\n        this.setState({item: group});\r\n      } catch (error) {\r\n        this.props.history.push('/');\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    if(name === 'authors') {\r\n        item[name].authors[name] = value;\r\n    }\r\n    item[name] = value;\r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n    console.log(item)\r\n    await fetch('/book/ai/v1/books' + (item.bookId ? '/' + item.bookId : '') , {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push('/groups');\r\n  }\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Book' : 'Add New Book'}</h2>;\r\n\r\n    return <div>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"title\">Title</Label>\r\n            <Input type=\"text\" name=\"title\" id=\"title\" value={item.title || ''}\r\n                   onChange={this.handleChange} autoComplete=\"title\"/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"pages\">Pages</Label>\r\n            <Input type=\"text\" name=\"pages\" id=\"pages\" value={item.pages || ''}\r\n                   onChange={this.handleChange} autoComplete=\"pages\"/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"year\">Year</Label>\r\n            <Input type=\"text\" name=\"year\" id=\"year\" value={item.year || ''}\r\n                   onChange={this.handleChange} autoComplete=\"year\"/>\r\n          </FormGroup>\r\n       \r\n            <FormGroup>\r\n              <Label for=\"authors\">Authors</Label>\r\n              <Input type=\"text\" name=\"authors\" id=\"authors\" value={item.authors || ''}\r\n                     onChange={this.handleChange} autoComplete=\"authors\"/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"imageLink\">Imagelink</Label>\r\n              <Input type=\"text\" name=\"imageLink\" id=\"imageLink\" value={item.imageLink || ''}\r\n                     onChange={this.handleChange} autoComplete=\"imageLink\"/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"inStore\">Available now</Label>\r\n              <Input type=\"text\" name=\"inStore\" id=\"inStore\" value={item.inStore || ''}\r\n                     onChange={this.handleChange} autoComplete=\"inStore\"/>\r\n            </FormGroup>\r\n   \r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to=\"/\">Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default (withRouter(BookEdit));"]},"metadata":{},"sourceType":"module"}