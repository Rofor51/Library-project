{"ast":null,"code":"//     Backbone.js 1.2.1\n//     (c) 2010-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n(function (factory) {\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = typeof self == 'object' && self.self == self && self || typeof global == 'object' && global.global == global && global; // Set up Backbone appropriately for the environment. Start with AMD.\n\n  if (typeof define === 'function' && define.amd) {\n    define(['underscore', 'jquery', 'exports'], function (_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    }); // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'),\n        $;\n\n    try {\n      $ = require('jquery');\n    } catch (e) {}\n\n    factory(root, exports, _, $); // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, root.jQuery || root.Zepto || root.ender || root.$);\n  }\n})(function (root, Backbone, _, $) {\n  // Initial Setup\n  // -------------\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone; // Create a local reference to a common array method we'll want to use later.\n\n  var slice = [].slice; // Current version of the library. Keep in sync with `package.json`.\n\n  Backbone.VERSION = '1.2.1'; // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n\n  Backbone.$ = $; // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n\n  Backbone.noConflict = function () {\n    root.Backbone = previousBackbone;\n    return this;\n  }; // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n\n\n  Backbone.emulateHTTP = false; // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n\n  Backbone.emulateJSON = false; // Proxy Underscore methods to a Backbone class' prototype using a\n  // particular attribute as the data argument\n\n  var addMethod = function (length, method, attribute) {\n    switch (length) {\n      case 1:\n        return function () {\n          return _[method](this[attribute]);\n        };\n\n      case 2:\n        return function (value) {\n          return _[method](this[attribute], value);\n        };\n\n      case 3:\n        return function (iteratee, context) {\n          return _[method](this[attribute], iteratee, context);\n        };\n\n      case 4:\n        return function (iteratee, defaultVal, context) {\n          return _[method](this[attribute], iteratee, defaultVal, context);\n        };\n\n      default:\n        return function () {\n          var args = slice.call(arguments);\n          args.unshift(this[attribute]);\n          return _[method].apply(_, args);\n        };\n    }\n  };\n\n  var addUnderscoreMethods = function (Class, methods, attribute) {\n    _.each(methods, function (length, method) {\n      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\n    });\n  }; // Backbone.Events\n  // ---------------\n  // A module that can be mixed in to *any object* in order to provide it with\n  // custom events. You may bind with `on` or remove with `off` callback\n  // functions to an event; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n\n\n  var Events = Backbone.Events = {}; // Regular expression used to split event strings.\n\n  var eventSplitter = /\\s+/; // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`), reducing them by manipulating `memo`.\n  // Passes a normalized single event name and callback, as well as any\n  // optional `opts`.\n\n  var eventsApi = function (iteratee, memo, name, callback, opts) {\n    var i = 0,\n        names;\n\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n\n      for (names = _.keys(name); i < names.length; i++) {\n        memo = iteratee(memo, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space separated event names.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        memo = iteratee(memo, names[i], callback, opts);\n      }\n    } else {\n      memo = iteratee(memo, name, callback, opts);\n    }\n\n    return memo;\n  }; // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n\n\n  Events.on = function (name, callback, context) {\n    return internalOn(this, name, callback, context);\n  }; // An internal use `on` function, used to guard the `listening` argument from\n  // the public API.\n\n\n  var internalOn = function (obj, name, callback, context, listening) {\n    obj._events = eventsApi(onApi, obj._events || {}, name, callback, {\n      context: context,\n      ctx: obj,\n      listening: listening\n    });\n\n    if (listening) {\n      var listeners = obj._listeners || (obj._listeners = {});\n      listeners[listening.id] = listening;\n    }\n\n    return obj;\n  }; // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to.\n\n\n  Events.listenTo = function (obj, name, callback) {\n    if (!obj) return this;\n\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = listeningTo[id]; // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n\n    if (!listening) {\n      var thisId = this._listenId || (this._listenId = _.uniqueId('l'));\n\n      listening = listeningTo[id] = {\n        obj: obj,\n        objId: id,\n        id: thisId,\n        listeningTo: listeningTo,\n        count: 0\n      };\n    } // Bind callbacks on obj, and keep track of them on listening.\n\n\n    internalOn(obj, name, callback, this, listening);\n    return this;\n  }; // The reducing API that adds a callback to the `events` object.\n\n\n  var onApi = function (events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context,\n          ctx = options.ctx,\n          listening = options.listening;\n      if (listening) listening.count++;\n      handlers.push({\n        callback: callback,\n        context: context,\n        ctx: context || ctx,\n        listening: listening\n      });\n    }\n\n    return events;\n  }; // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n\n\n  Events.off = function (name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n      context: context,\n      listeners: this._listeners\n    });\n    return this;\n  }; // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n\n\n  Events.stopListening = function (obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]]; // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n\n      if (!listening) break;\n      listening.obj.off(name, callback, this);\n    }\n\n    if (_.isEmpty(listeningTo)) this._listeningTo = void 0;\n    return this;\n  }; // The reducing API that removes a callback from the `events` object.\n\n\n  var offApi = function (events, name, callback, options) {\n    // No events to consider.\n    if (!events) return;\n    var i = 0,\n        listening;\n    var context = options.context,\n        listeners = options.listeners; // Delete all events listeners and \"drop\" events.\n\n    if (!name && !callback && !context) {\n      var ids = _.keys(listeners);\n\n      for (; i < ids.length; i++) {\n        listening = listeners[ids[i]];\n        delete listeners[listening.id];\n        delete listening.listeningTo[listening.objId];\n      }\n\n      return;\n    }\n\n    var names = name ? [name] : _.keys(events);\n\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name]; // Bail out if there are no events stored.\n\n      if (!handlers) break; // Replace events if there are any remaining.  Otherwise, clean up.\n\n      var remaining = [];\n\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n\n        if (callback && callback !== handler.callback && callback !== handler.callback._callback || context && context !== handler.context) {\n          remaining.push(handler);\n        } else {\n          listening = handler.listening;\n\n          if (listening && --listening.count === 0) {\n            delete listeners[listening.id];\n            delete listening.listeningTo[listening.objId];\n          }\n        }\n      } // Update tail event if the list has any events.  Otherwise, clean up.\n\n\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n\n    if (_.size(events)) return events;\n  }; // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, it will be removed. When multiple events are\n  // passed in using the space-separated syntax, the event will fire once for every\n  // event you passed in, not once for a combination of all events\n\n\n  Events.once = function (name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));\n    return this.on(events, void 0, context);\n  }; // Inversion-of-control versions of `once`.\n\n\n  Events.listenToOnce = function (obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));\n    return this.listenTo(obj, events);\n  }; // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n\n\n  var onceMap = function (map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function () {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n\n      once._callback = callback;\n    }\n\n    return map;\n  }; // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n\n\n  Events.trigger = function (name) {\n    if (!this._events) return this;\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  }; // Handles triggering the appropriate event callbacks.\n\n\n  var triggerApi = function (objEvents, name, cb, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n\n    return objEvents;\n  }; // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n\n\n  var triggerEvents = function (events, args) {\n    var ev,\n        i = -1,\n        l = events.length,\n        a1 = args[0],\n        a2 = args[1],\n        a3 = args[2];\n\n    switch (args.length) {\n      case 0:\n        while (++i < l) (ev = events[i]).callback.call(ev.ctx);\n\n        return;\n\n      case 1:\n        while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1);\n\n        return;\n\n      case 2:\n        while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2);\n\n        return;\n\n      case 3:\n        while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3);\n\n        return;\n\n      default:\n        while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args);\n\n        return;\n    }\n  }; // Aliases for backwards compatibility.\n\n\n  Events.bind = Events.on;\n  Events.unbind = Events.off; // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n\n  _.extend(Backbone, Events); // Backbone.Model\n  // --------------\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n\n\n  var Model = Backbone.Model = function (attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  }; // Attach all inheritable methods to the Model prototype.\n\n\n  _.extend(Model.prototype, Events, {\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n    // The value returned during the last failed validation.\n    validationError: null,\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function () {},\n    // Return a copy of the model's `attributes` object.\n    toJSON: function (options) {\n      return _.clone(this.attributes);\n    },\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function () {\n      return Backbone.sync.apply(this, arguments);\n    },\n    // Get the value of an attribute.\n    get: function (attr) {\n      return this.attributes[attr];\n    },\n    // Get the HTML-escaped value of an attribute.\n    escape: function (attr) {\n      return _.escape(this.get(attr));\n    },\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function (attr) {\n      return this.get(attr) != null;\n    },\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function (attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function (key, val, options) {\n      if (key == null) return this; // Handle both `\"key\", value` and `{key: value}` -style arguments.\n\n      var attrs;\n\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {}); // Run validation.\n\n      if (!this._validate(attrs, options)) return false; // Extract attributes and options.\n\n      var unset = options.unset;\n      var silent = options.silent;\n      var changes = [];\n      var changing = this._changing;\n      this._changing = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev = this._previousAttributes; // Check for changes of `id`.\n\n      if (this.idAttribute in attrs) this.id = attrs[this.idAttribute]; // For each `set` attribute, update or delete the current value.\n\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n\n        unset ? delete current[attr] : current[attr] = val;\n      } // Trigger all relevant attribute changes.\n\n\n      if (!silent) {\n        if (changes.length) this._pending = options;\n\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      } // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n\n\n      if (changing) return this;\n\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function (attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {\n        unset: true\n      }));\n    },\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function (options) {\n      var attrs = {};\n\n      for (var key in this.attributes) attrs[key] = void 0;\n\n      return this.set(attrs, _.extend({}, options, {\n        unset: true\n      }));\n    },\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function (attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function (diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n      }\n\n      return _.size(changed) ? changed : false;\n    },\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function (attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function () {\n      return _.clone(this._previousAttributes);\n    },\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function (options) {\n      options = _.extend({\n        parse: true\n      }, options);\n      var model = this;\n      var success = options.success;\n\n      options.success = function (resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function (key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({\n        validate: true,\n        parse: true\n      }, options);\n      var wait = options.wait; // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else {\n        if (!this._validate(attrs, options)) return false;\n      } // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n\n\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n\n      options.success = function (resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n\n      wrapError(this, options); // Set temporary attributes if `{wait: true}` to properly find new ids.\n\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n      var method = this.isNew() ? 'create' : options.patch ? 'patch' : 'update';\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options); // Restore attributes.\n\n      this.attributes = attributes;\n      return xhr;\n    },\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function (options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function () {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function (resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n\n      if (!wait) destroy();\n      return xhr;\n    },\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function () {\n      var base = _.result(this, 'urlRoot') || _.result(this.collection, 'url') || urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function (resp, options) {\n      return resp;\n    },\n    // Create a new model with identical attributes to this one.\n    clone: function () {\n      return new this.constructor(this.attributes);\n    },\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function () {\n      return !this.has(this.idAttribute);\n    },\n    // Check if the model is currently in a valid state.\n    isValid: function (options) {\n      return this._validate({}, _.defaults({\n        validate: true\n      }, options));\n    },\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function (attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {\n        validationError: error\n      }));\n      return false;\n    }\n  }); // Underscore methods that we want to implement on the Model.\n\n\n  var modelMethods = {\n    keys: 1,\n    values: 1,\n    pairs: 1,\n    invert: 1,\n    pick: 0,\n    omit: 0,\n    chain: 1,\n    isEmpty: 1\n  }; // Mix in each Underscore method as a proxy to `Model#attributes`.\n\n  addUnderscoreMethods(Model, modelMethods, 'attributes'); // Backbone.Collection\n  // -------------------\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n\n  var Collection = Backbone.Collection = function (models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n\n    this._reset();\n\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({\n      silent: true\n    }, options));\n  }; // Default options for `Collection#set`.\n\n\n  var setOptions = {\n    add: true,\n    remove: true,\n    merge: true\n  };\n  var addOptions = {\n    add: true,\n    remove: false\n  }; // Define the Collection's inheritable methods.\n\n  _.extend(Collection.prototype, Events, {\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function () {},\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function (options) {\n      return this.map(function (model) {\n        return model.toJSON(options);\n      });\n    },\n    // Proxy `Backbone.sync` by default.\n    sync: function () {\n      return Backbone.sync.apply(this, arguments);\n    },\n    // Add a model, or list of models to the set.\n    add: function (models, options) {\n      return this.set(models, _.extend({\n        merge: false\n      }, options, addOptions));\n    },\n    // Remove a model, or a list of models from the set.\n    remove: function (models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : _.clone(models);\n\n      var removed = this._removeModels(models, options);\n\n      if (!options.silent && removed) this.trigger('update', this, options);\n      return singular ? removed[0] : removed;\n    },\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function (models, options) {\n      options = _.defaults({}, options, setOptions);\n      if (options.parse && !this._isModel(models)) models = this.parse(models, options);\n      var singular = !_.isArray(models);\n      models = singular ? models ? [models] : [] : models.slice();\n      var id, model, attrs, existing, sort;\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at < 0) at += this.length + 1;\n      var sortable = this.comparator && at == null && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n      var toAdd = [],\n          toRemove = [],\n          modelMap = {};\n      var add = options.add,\n          merge = options.merge,\n          remove = options.remove;\n      var order = !sortable && add && remove ? [] : false;\n      var orderChanged = false; // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n\n      for (var i = 0; i < models.length; i++) {\n        attrs = models[i]; // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n\n        if (existing = this.get(attrs)) {\n          if (remove) modelMap[existing.cid] = true;\n\n          if (merge && attrs !== existing) {\n            attrs = this._isModel(attrs) ? attrs.attributes : attrs;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            if (sortable && !sort && existing.hasChanged(sortAttr)) sort = true;\n          }\n\n          models[i] = existing; // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(attrs, options);\n          if (!model) continue;\n          toAdd.push(model);\n\n          this._addReference(model, options);\n        } // Do not add multiple models with the same `id`.\n\n\n        model = existing || model;\n        if (!model) continue;\n        id = this.modelId(model.attributes);\n\n        if (order && (model.isNew() || !modelMap[id])) {\n          order.push(model); // Check to see if this is actually a new model at this index.\n\n          orderChanged = orderChanged || !this.models[i] || model.cid !== this.models[i].cid;\n        }\n\n        modelMap[id] = true;\n      } // Remove nonexistent models if appropriate.\n\n\n      if (remove) {\n        for (var i = 0; i < this.length; i++) {\n          if (!modelMap[(model = this.models[i]).cid]) toRemove.push(model);\n        }\n\n        if (toRemove.length) this._removeModels(toRemove, options);\n      } // See if sorting is needed, update `length` and splice in new models.\n\n\n      if (toAdd.length || orderChanged) {\n        if (sortable) sort = true;\n        this.length += toAdd.length;\n\n        if (at != null) {\n          for (var i = 0; i < toAdd.length; i++) {\n            this.models.splice(at + i, 0, toAdd[i]);\n          }\n        } else {\n          if (order) this.models.length = 0;\n          var orderedModels = order || toAdd;\n\n          for (var i = 0; i < orderedModels.length; i++) {\n            this.models.push(orderedModels[i]);\n          }\n        }\n      } // Silently sort the collection if appropriate.\n\n\n      if (sort) this.sort({\n        silent: true\n      }); // Unless silenced, it's time to fire all appropriate add/sort events.\n\n      if (!options.silent) {\n        var addOpts = at != null ? _.clone(options) : options;\n\n        for (var i = 0; i < toAdd.length; i++) {\n          if (at != null) addOpts.index = at + i;\n          (model = toAdd[i]).trigger('add', model, this, addOpts);\n        }\n\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length) this.trigger('update', this, options);\n      } // Return the added (or merged) model (or models).\n\n\n      return singular ? models[0] : models;\n    },\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function (models, options) {\n      options = options ? _.clone(options) : {};\n\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n\n      options.previousModels = this.models;\n\n      this._reset();\n\n      models = this.add(models, _.extend({\n        silent: true\n      }, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n    // Add a model to the end of the collection.\n    push: function (model, options) {\n      return this.add(model, _.extend({\n        at: this.length\n      }, options));\n    },\n    // Remove a model from the end of the collection.\n    pop: function (options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n    // Add a model to the beginning of the collection.\n    unshift: function (model, options) {\n      return this.add(model, _.extend({\n        at: 0\n      }, options));\n    },\n    // Remove a model from the beginning of the collection.\n    shift: function (options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n    // Slice out a sub-array of models from the collection.\n    slice: function () {\n      return slice.apply(this.models, arguments);\n    },\n    // Get a model from the set by id.\n    get: function (obj) {\n      if (obj == null) return void 0;\n      var id = this.modelId(this._isModel(obj) ? obj.attributes : obj);\n      return this._byId[obj] || this._byId[id] || this._byId[obj.cid];\n    },\n    // Get the model at the given index.\n    at: function (index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function (attrs, first) {\n      var matches = _.matches(attrs);\n\n      return this[first ? 'find' : 'filter'](function (model) {\n        return matches(model.attributes);\n      });\n    },\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function (attrs) {\n      return this.where(attrs, true);\n    },\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function (options) {\n      if (!this.comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {}); // Run sort based on type of `comparator`.\n\n      if (_.isString(this.comparator) || this.comparator.length === 1) {\n        this.models = this.sortBy(this.comparator, this);\n      } else {\n        this.models.sort(_.bind(this.comparator, this));\n      }\n\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n    // Pluck an attribute from each model in the collection.\n    pluck: function (attr) {\n      return _.invoke(this.models, 'get', attr);\n    },\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function (options) {\n      options = _.extend({\n        parse: true\n      }, options);\n      var success = options.success;\n      var collection = this;\n\n      options.success = function (resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function (model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n\n      options.success = function (model, resp, callbackOpts) {\n        if (wait) collection.add(model, callbackOpts);\n        if (success) success.call(callbackOpts.context, model, resp, callbackOpts);\n      };\n\n      model.save(null, options);\n      return model;\n    },\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function (resp, options) {\n      return resp;\n    },\n    // Create a new collection with an identical list of models as this one.\n    clone: function () {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n    // Define how to uniquely identify models in the collection.\n    modelId: function (attrs) {\n      return attrs[this.model.prototype.idAttribute || 'id'];\n    },\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function () {\n      this.length = 0;\n      this.models = [];\n      this._byId = {};\n    },\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function (attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n    // Internal method called by both remove and set.\n    // Returns removed models, or false if nothing is removed.\n    _removeModels: function (models, options) {\n      var removed = [];\n\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n\n        removed.push(model);\n\n        this._removeReference(model, options);\n      }\n\n      return removed.length ? removed : false;\n    },\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function (model) {\n      return model instanceof Model;\n    },\n    // Internal method to create a model's ties to a collection.\n    _addReference: function (model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function (model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function (event, model, collection, options) {\n      if ((event === 'add' || event === 'remove') && collection !== this) return;\n      if (event === 'destroy') this.remove(model, options);\n\n      if (event === 'change') {\n        var prevId = this.modelId(model.previousAttributes());\n        var id = this.modelId(model.attributes);\n\n        if (prevId !== id) {\n          if (prevId != null) delete this._byId[prevId];\n          if (id != null) this._byId[id] = model;\n        }\n      }\n\n      this.trigger.apply(this, arguments);\n    }\n  }); // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n\n\n  var collectionMethods = {\n    forEach: 3,\n    each: 3,\n    map: 3,\n    collect: 3,\n    reduce: 4,\n    foldl: 4,\n    inject: 4,\n    reduceRight: 4,\n    foldr: 4,\n    find: 3,\n    detect: 3,\n    filter: 3,\n    select: 3,\n    reject: 3,\n    every: 3,\n    all: 3,\n    some: 3,\n    any: 3,\n    include: 2,\n    contains: 2,\n    invoke: 0,\n    max: 3,\n    min: 3,\n    toArray: 1,\n    size: 1,\n    first: 3,\n    head: 3,\n    take: 3,\n    initial: 3,\n    rest: 3,\n    tail: 3,\n    drop: 3,\n    last: 3,\n    without: 0,\n    difference: 0,\n    indexOf: 3,\n    shuffle: 1,\n    lastIndexOf: 3,\n    isEmpty: 1,\n    chain: 1,\n    sample: 3,\n    partition: 3\n  }; // Mix in each Underscore method as a proxy to `Collection#models`.\n\n  addUnderscoreMethods(Collection, collectionMethods, 'models'); // Underscore methods that take a property name as an argument.\n\n  var attributeMethods = ['groupBy', 'countBy', 'sortBy', 'indexBy']; // Use attributes instead of properties.\n\n  _.each(attributeMethods, function (method) {\n    if (!_[method]) return;\n\n    Collection.prototype[method] = function (value, context) {\n      var iterator = _.isFunction(value) ? value : function (model) {\n        return model.get(value);\n      };\n      return _[method](this.models, iterator, context);\n    };\n  }); // Backbone.View\n  // -------------\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n\n\n  var View = Backbone.View = function (options) {\n    this.cid = _.uniqueId('view');\n\n    _.extend(this, _.pick(options, viewOptions));\n\n    this._ensureElement();\n\n    this.initialize.apply(this, arguments);\n  }; // Cached regex to split keys for `delegate`.\n\n\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/; // List of view options to be merged as properties.\n\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events']; // Set up all inheritable **Backbone.View** properties and methods.\n\n  _.extend(View.prototype, Events, {\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function (selector) {\n      return this.$el.find(selector);\n    },\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function () {},\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function () {\n      return this;\n    },\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function () {\n      this._removeElement();\n\n      this.stopListening();\n      return this;\n    },\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function () {\n      this.$el.remove();\n    },\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function (element) {\n      this.undelegateEvents();\n\n      this._setElement(element);\n\n      this.delegateEvents();\n      return this;\n    },\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function (el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function (events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], _.bind(method, this));\n      }\n\n      return this;\n    },\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function (eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function () {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function (eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function (tagName) {\n      return document.createElement(tagName);\n    },\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function () {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function (attributes) {\n      this.$el.attr(attributes);\n    }\n  }); // Backbone.sync\n  // -------------\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n\n\n  Backbone.sync = function (method, model, options) {\n    var type = methodMap[method]; // Default options, unless specified.\n\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    }); // Default JSON-request options.\n\n\n    var params = {\n      type: type,\n      dataType: 'json'\n    }; // Ensure that we have a URL.\n\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    } // Ensure that we have the appropriate request data.\n\n\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    } // For older servers, emulate JSON by encoding the request into an HTML-form.\n\n\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {\n        model: params.data\n      } : {};\n    } // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n\n\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n\n      options.beforeSend = function (xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    } // Don't process data on a non-GET request.\n\n\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    } // Pass along `textStatus` and `errorThrown` from jQuery.\n\n\n    var error = options.error;\n\n    options.error = function (xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    }; // Make the request, allowing the user to override any Ajax options.\n\n\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  }; // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n\n\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch': 'PATCH',\n    'delete': 'DELETE',\n    'read': 'GET'\n  }; // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n\n  Backbone.ajax = function () {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  }; // Backbone.Router\n  // ---------------\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n\n\n  var Router = Backbone.Router = function (options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n\n    this._bindRoutes();\n\n    this.initialize.apply(this, arguments);\n  }; // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n\n\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam = /(\\(\\?)?:\\w+/g;\n  var splatParam = /\\*\\w+/g;\n  var escapeRegExp = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g; // Set up all inheritable **Backbone.Router** properties and methods.\n\n  _.extend(Router.prototype, Events, {\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function () {},\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function (route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function (fragment) {\n        var args = router._extractParameters(route, fragment);\n\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function (callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function (fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function () {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n\n      var route,\n          routes = _.keys(this.routes);\n\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function (route) {\n      route = route.replace(escapeRegExp, '\\\\$&').replace(optionalParam, '(?:$1)?').replace(namedParam, function (match, optional) {\n        return optional ? match : '([^/?]+)';\n      }).replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function (route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function (param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n  }); // Backbone.History\n  // ----------------\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n\n\n  var History = Backbone.History = function () {\n    this.handlers = [];\n\n    _.bindAll(this, 'checkUrl'); // Ensure that `History` can be used outside of the browser.\n\n\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  }; // Cached regex for stripping a leading hash/slash and trailing space.\n\n\n  var routeStripper = /^[#\\/]|\\s+$/g; // Cached regex for stripping leading and trailing slashes.\n\n  var rootStripper = /^\\/+|\\/+$/g; // Cached regex for stripping urls of hash.\n\n  var pathStripper = /#.*$/; // Has the history handling already been started?\n\n  History.started = false; // Set up all inheritable **Backbone.History** properties and methods.\n\n  _.extend(History.prototype, Events, {\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n    // Are we at the app root?\n    atRoot: function () {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n    // Does the pathname match the root?\n    matchRoot: function () {\n      var path = this.decodeFragment(this.location.pathname);\n      var root = path.slice(0, this.root.length - 1) + '/';\n      return root === this.root;\n    },\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function (fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function () {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function (window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n    // Get the pathname and search params, without the root.\n    getPath: function () {\n      var path = this.decodeFragment(this.location.pathname + this.getSearch()).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function (fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n\n      return fragment.replace(routeStripper, '');\n    },\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function (options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true; // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n\n      this.options = _.extend({\n        root: '/'\n      }, this.options, options);\n      this.root = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange = 'onhashchange' in window;\n      this._useHashChange = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState = !!this.options.pushState;\n      this._hasPushState = !!(this.history && this.history.pushState);\n      this._usePushState = this._wantsPushState && this._hasPushState;\n      this.fragment = this.getFragment(); // Normalize root to always include a leading and trailing slash.\n\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/'); // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n\n      if (this._wantsHashChange && this._wantsPushState) {\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var root = this.root.slice(0, -1) || '/';\n          this.location.replace(root + '#' + this.getPath()); // Return immediately as browser will do redirect to new url\n\n          return true; // Or if we've started out with a hash-based route, but we're currently\n          // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {\n            replace: true\n          });\n        }\n      } // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n\n\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body; // Using `appendChild` will throw on IE < 9 if the document is not ready.\n\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      } // Add a cross-platform `addEventListener` shim for older browsers.\n\n\n      var addEventListener = window.addEventListener || function (eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      }; // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n\n\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function () {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function (eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      }; // Remove window listeners.\n\n\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      } // Clean up the iframe if necessary.\n\n\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      } // Some environments will throw when clearing an undefined interval.\n\n\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function (route, callback) {\n      this.handlers.unshift({\n        route: route,\n        callback: callback\n      });\n    },\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function (e) {\n      var current = this.getFragment(); // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function (fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.any(this.handlers, function (handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function (fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {\n        trigger: !!options\n      }; // Normalize the fragment.\n\n      fragment = this.getFragment(fragment || ''); // Don't include a trailing slash on the root.\n\n      var root = this.root;\n\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        root = root.slice(0, -1) || '/';\n      }\n\n      var url = root + fragment; // Strip the hash and decode for matching.\n\n      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));\n      if (this.fragment === fragment) return;\n      this.fragment = fragment; // If pushState is available, we use it to set the fragment as a real URL.\n\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url); // If hash changes haven't been explicitly disabled, update the hash\n        // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n\n        if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {\n          var iWindow = this.iframe.contentWindow; // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n\n          if (!options.replace) {\n            iWindow.document.open();\n            iWindow.document.close();\n          }\n\n          this._updateHash(iWindow.location, fragment, options.replace);\n        } // If you've told us that you explicitly don't want fallback hashchange-\n        // based history, then `navigate` becomes a page refresh.\n\n      } else {\n        return this.location.assign(url);\n      }\n\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function (location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n  }); // Create the default Backbone.history.\n\n\n  Backbone.history = new History(); // Helpers\n  // -------\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n\n  var extend = function (protoProps, staticProps) {\n    var parent = this;\n    var child; // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function () {\n        return parent.apply(this, arguments);\n      };\n    } // Add static properties to the constructor function, if supplied.\n\n\n    _.extend(child, parent, staticProps); // Set the prototype chain to inherit from `parent`, without calling\n    // `parent` constructor function.\n\n\n    var Surrogate = function () {\n      this.constructor = child;\n    };\n\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate(); // Add prototype properties (instance properties) to the subclass,\n    // if supplied.\n\n    if (protoProps) _.extend(child.prototype, protoProps); // Set a convenience property in case the parent's prototype is needed\n    // later.\n\n    child.__super__ = parent.prototype;\n    return child;\n  }; // Set up inheritance for the model, collection, router, view and history.\n\n\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend; // Throw an error when a URL is needed, and none is supplied.\n\n  var urlError = function () {\n    throw new Error('A \"url\" property or function must be specified');\n  }; // Wrap an optional error callback with a fallback error event.\n\n\n  var wrapError = function (model, options) {\n    var error = options.error;\n\n    options.error = function (resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n});","map":{"version":3,"sources":["C:/Users/robin/Desktop/Library/Library-React/my-app/node_modules/backbone/backbone.js"],"names":["factory","root","self","global","define","amd","_","$","exports","Backbone","require","e","jQuery","Zepto","ender","previousBackbone","slice","VERSION","noConflict","emulateHTTP","emulateJSON","addMethod","length","method","attribute","value","iteratee","context","defaultVal","args","call","arguments","unshift","apply","addUnderscoreMethods","Class","methods","each","prototype","Events","eventSplitter","eventsApi","memo","name","callback","opts","i","names","keys","test","split","on","internalOn","obj","listening","_events","onApi","ctx","listeners","_listeners","id","listenTo","_listenId","uniqueId","listeningTo","_listeningTo","thisId","objId","count","events","options","handlers","push","off","offApi","stopListening","ids","isEmpty","remaining","j","handler","_callback","size","once","onceMap","bind","listenToOnce","map","offer","trigger","Math","max","Array","triggerApi","objEvents","cb","allEvents","all","triggerEvents","concat","ev","l","a1","a2","a3","unbind","extend","Model","attributes","attrs","cid","cidPrefix","collection","parse","defaults","result","set","changed","initialize","validationError","idAttribute","toJSON","clone","sync","get","attr","escape","has","matches","key","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","isEqual","_pending","clear","hasChanged","changedAttributes","diff","old","previous","previousAttributes","fetch","model","success","resp","serverAttrs","wrapError","save","validate","wait","isNew","patch","xhr","destroy","defer","url","base","urlError","replace","encodeURIComponent","constructor","isValid","error","modelMethods","values","pairs","invert","pick","omit","chain","Collection","models","comparator","_reset","reset","setOptions","add","remove","merge","addOptions","singular","isArray","removed","_removeModels","_isModel","existing","sort","at","sortable","sortAttr","isString","toAdd","toRemove","modelMap","order","orderChanged","_prepareModel","_addReference","modelId","splice","orderedModels","addOpts","index","_removeReference","previousModels","pop","shift","_byId","where","first","findWhere","Error","sortBy","pluck","invoke","create","callbackOpts","indexOf","_onModelEvent","event","prevId","collectionMethods","forEach","collect","reduce","foldl","inject","reduceRight","foldr","find","detect","filter","select","reject","every","some","any","include","contains","min","toArray","head","take","initial","rest","tail","drop","last","without","difference","shuffle","lastIndexOf","sample","partition","attributeMethods","iterator","isFunction","View","viewOptions","_ensureElement","delegateEventSplitter","tagName","selector","$el","render","_removeElement","setElement","element","undelegateEvents","_setElement","delegateEvents","el","match","delegate","eventName","listener","undelegate","_createElement","document","createElement","className","_setAttributes","type","methodMap","params","dataType","data","contentType","JSON","stringify","_method","beforeSend","setRequestHeader","processData","textStatus","errorThrown","ajax","Router","routes","_bindRoutes","optionalParam","namedParam","splatParam","escapeRegExp","route","isRegExp","_routeToRegExp","router","history","fragment","_extractParameters","execute","navigate","optional","RegExp","exec","param","decodeURIComponent","History","bindAll","window","location","routeStripper","rootStripper","pathStripper","started","interval","atRoot","path","pathname","getSearch","matchRoot","decodeFragment","decodeURI","href","getHash","getPath","charAt","getFragment","_usePushState","_wantsHashChange","start","hashChange","_hasHashChange","_useHashChange","_wantsPushState","pushState","_hasPushState","iframe","src","style","display","tabIndex","body","iWindow","insertBefore","firstChild","contentWindow","open","close","hash","addEventListener","attachEvent","checkUrl","_checkUrlInterval","setInterval","loadUrl","stop","removeEventListener","detachEvent","removeChild","clearInterval","title","_updateHash","assign","protoProps","staticProps","parent","child","Surrogate","__super__"],"mappings":"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","sourcesContent":["//     Backbone.js 1.2.1\n\n//     (c) 2010-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(factory) {\n\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = (typeof self == 'object' && self.self == self && self) ||\n            (typeof global == 'object' && global.global == global && global);\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd) {\n    define(['underscore', 'jquery', 'exports'], function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'), $;\n    try { $ = require('jquery'); } catch(e) {}\n    factory(root, exports, _, $);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n\n}(function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create a local reference to a common array method we'll want to use later.\n  var slice = [].slice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.2.1';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Proxy Underscore methods to a Backbone class' prototype using a\n  // particular attribute as the data argument\n  var addMethod = function(length, method, attribute) {\n    switch (length) {\n      case 1: return function() {\n        return _[method](this[attribute]);\n      };\n      case 2: return function(value) {\n        return _[method](this[attribute], value);\n      };\n      case 3: return function(iteratee, context) {\n        return _[method](this[attribute], iteratee, context);\n      };\n      case 4: return function(iteratee, defaultVal, context) {\n        return _[method](this[attribute], iteratee, defaultVal, context);\n      };\n      default: return function() {\n        var args = slice.call(arguments);\n        args.unshift(this[attribute]);\n        return _[method].apply(_, args);\n      };\n    }\n  };\n  var addUnderscoreMethods = function(Class, methods, attribute) {\n    _.each(methods, function(length, method) {\n      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\n    });\n  };\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // custom events. You may bind with `on` or remove with `off` callback\n  // functions to an event; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {};\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`), reducing them by manipulating `memo`.\n  // Passes a normalized single event name and callback, as well as any\n  // optional `opts`.\n  var eventsApi = function(iteratee, memo, name, callback, opts) {\n    var i = 0, names;\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n      for (names = _.keys(name); i < names.length ; i++) {\n        memo = iteratee(memo, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space separated event names.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        memo = iteratee(memo, names[i], callback, opts);\n      }\n    } else {\n      memo = iteratee(memo, name, callback, opts);\n    }\n    return memo;\n  };\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  Events.on = function(name, callback, context) {\n    return internalOn(this, name, callback, context);\n  };\n\n  // An internal use `on` function, used to guard the `listening` argument from\n  // the public API.\n  var internalOn = function(obj, name, callback, context, listening) {\n    obj._events = eventsApi(onApi, obj._events || {}, name, callback, {\n        context: context,\n        ctx: obj,\n        listening: listening\n    });\n\n    if (listening) {\n      var listeners = obj._listeners || (obj._listeners = {});\n      listeners[listening.id] = listening;\n    }\n\n    return obj;\n  };\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to.\n  Events.listenTo =  function(obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      var thisId = this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = listeningTo[id] = {obj: obj, objId: id, id: thisId, listeningTo: listeningTo, count: 0};\n    }\n\n    // Bind callbacks on obj, and keep track of them on listening.\n    internalOn(obj, name, callback, this, listening);\n    return this;\n  };\n\n  // The reducing API that adds a callback to the `events` object.\n  var onApi = function(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context, ctx = options.ctx, listening = options.listening;\n      if (listening) listening.count++;\n\n      handlers.push({ callback: callback, context: context, ctx: context || ctx, listening: listening });\n    }\n    return events;\n  };\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  Events.off =  function(name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n        context: context,\n        listeners: this._listeners\n    });\n    return this;\n  };\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  Events.stopListening =  function(obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n\n      listening.obj.off(name, callback, this);\n    }\n    if (_.isEmpty(listeningTo)) this._listeningTo = void 0;\n\n    return this;\n  };\n\n  // The reducing API that removes a callback from the `events` object.\n  var offApi = function(events, name, callback, options) {\n    // No events to consider.\n    if (!events) return;\n\n    var i = 0, listening;\n    var context = options.context, listeners = options.listeners;\n\n    // Delete all events listeners and \"drop\" events.\n    if (!name && !callback && !context) {\n      var ids = _.keys(listeners);\n      for (; i < ids.length; i++) {\n        listening = listeners[ids[i]];\n        delete listeners[listening.id];\n        delete listening.listeningTo[listening.objId];\n      }\n      return;\n    }\n\n    var names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name];\n\n      // Bail out if there are no events stored.\n      if (!handlers) break;\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      var remaining = [];\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n        if (\n          callback && callback !== handler.callback &&\n            callback !== handler.callback._callback ||\n              context && context !== handler.context\n        ) {\n          remaining.push(handler);\n        } else {\n          listening = handler.listening;\n          if (listening && --listening.count === 0) {\n            delete listeners[listening.id];\n            delete listening.listeningTo[listening.objId];\n          }\n        }\n      }\n\n      // Update tail event if the list has any events.  Otherwise, clean up.\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n    if (_.size(events)) return events;\n  };\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, it will be removed. When multiple events are\n  // passed in using the space-separated syntax, the event will fire once for every\n  // event you passed in, not once for a combination of all events\n  Events.once =  function(name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));\n    return this.on(events, void 0, context);\n  };\n\n  // Inversion-of-control versions of `once`.\n  Events.listenToOnce =  function(obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));\n    return this.listenTo(obj, events);\n  };\n\n  // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n  var onceMap = function(map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function() {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n    }\n    return map;\n  };\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  Events.trigger =  function(name) {\n    if (!this._events) return this;\n\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  };\n\n  // Handles triggering the appropriate event callbacks.\n  var triggerApi = function(objEvents, name, cb, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n    return objEvents;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function(attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      var unset      = options.unset;\n      var silent     = options.silent;\n      var changes    = [];\n      var changing   = this._changing;\n      this._changing = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev    = this._previousAttributes;\n\n      // Check for changes of `id`.\n      if (this.idAttribute in attrs) this.id = attrs[this.idAttribute];\n\n      // For each `set` attribute, update or delete the current value.\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n      }\n      return _.size(changed) ? changed : false;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true, parse: true}, options);\n      var wait = options.wait;\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else {\n        if (!this._validate(attrs, options)) return false;\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function() {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n      if (!wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.defaults({validate: true}, options));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Model.\n  var modelMethods = { keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\n      omit: 0, chain: 1, isEmpty: 1 };\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  addUnderscoreMethods(Model, modelMethods, 'attributes');\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model) { return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : _.clone(models);\n      var removed = this._removeModels(models, options);\n      if (!options.silent && removed) this.trigger('update', this, options);\n      return singular ? removed[0] : removed;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      options = _.defaults({}, options, setOptions);\n      if (options.parse && !this._isModel(models)) models = this.parse(models, options);\n      var singular = !_.isArray(models);\n      models = singular ? (models ? [models] : []) : models.slice();\n      var id, model, attrs, existing, sort;\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at < 0) at += this.length + 1;\n      var sortable = this.comparator && (at == null) && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n      var toAdd = [], toRemove = [], modelMap = {};\n      var add = options.add, merge = options.merge, remove = options.remove;\n      var order = !sortable && add && remove ? [] : false;\n      var orderChanged = false;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      for (var i = 0; i < models.length; i++) {\n        attrs = models[i];\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        if (existing = this.get(attrs)) {\n          if (remove) modelMap[existing.cid] = true;\n          if (merge && attrs !== existing) {\n            attrs = this._isModel(attrs) ? attrs.attributes : attrs;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            if (sortable && !sort && existing.hasChanged(sortAttr)) sort = true;\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(attrs, options);\n          if (!model) continue;\n          toAdd.push(model);\n          this._addReference(model, options);\n        }\n\n        // Do not add multiple models with the same `id`.\n        model = existing || model;\n        if (!model) continue;\n        id = this.modelId(model.attributes);\n        if (order && (model.isNew() || !modelMap[id])) {\n          order.push(model);\n\n          // Check to see if this is actually a new model at this index.\n          orderChanged = orderChanged || !this.models[i] || model.cid !== this.models[i].cid;\n        }\n\n        modelMap[id] = true;\n      }\n\n      // Remove nonexistent models if appropriate.\n      if (remove) {\n        for (var i = 0; i < this.length; i++) {\n          if (!modelMap[(model = this.models[i]).cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this._removeModels(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      if (toAdd.length || orderChanged) {\n        if (sortable) sort = true;\n        this.length += toAdd.length;\n        if (at != null) {\n          for (var i = 0; i < toAdd.length; i++) {\n            this.models.splice(at + i, 0, toAdd[i]);\n          }\n        } else {\n          if (order) this.models.length = 0;\n          var orderedModels = order || toAdd;\n          for (var i = 0; i < orderedModels.length; i++) {\n            this.models.push(orderedModels[i]);\n          }\n        }\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort events.\n      if (!options.silent) {\n        var addOpts = at != null ? _.clone(options) : options;\n        for (var i = 0; i < toAdd.length; i++) {\n          if (at != null) addOpts.index = at + i;\n          (model = toAdd[i]).trigger('add', model, this, addOpts);\n        }\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length) this.trigger('update', this, options);\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options = options ? _.clone(options) : {};\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      var id = this.modelId(this._isModel(obj) ? obj.attributes : obj);\n      return this._byId[obj] || this._byId[id] || this._byId[obj.cid];\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      var matches = _.matches(attrs);\n      return this[first ? 'find' : 'filter'](function(model) {\n        return matches(model.attributes);\n      });\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      if (!this.comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      // Run sort based on type of `comparator`.\n      if (_.isString(this.comparator) || this.comparator.length === 1) {\n        this.models = this.sortBy(this.comparator, this);\n      } else {\n        this.models.sort(_.bind(this.comparator, this));\n      }\n\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return _.invoke(this.models, 'get', attr);\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(model, resp, callbackOpts) {\n        if (wait) collection.add(model, callbackOpts);\n        if (success) success.call(callbackOpts.context, model, resp, callbackOpts);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n\n    // Define how to uniquely identify models in the collection.\n    modelId: function (attrs) {\n      return attrs[this.model.prototype.idAttribute || 'id'];\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method called by both remove and set.\n    // Returns removed models, or false if nothing is removed.\n    _removeModels: function(models, options) {\n      var removed = [];\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n\n        removed.push(model);\n        this._removeReference(model, options);\n      }\n      return removed.length ? removed : false;\n    },\n\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function (model) {\n      return model instanceof Model;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if ((event === 'add' || event === 'remove') && collection !== this) return;\n      if (event === 'destroy') this.remove(model, options);\n      if (event === 'change') {\n        var prevId = this.modelId(model.previousAttributes());\n        var id = this.modelId(model.attributes);\n        if (prevId !== id) {\n          if (prevId != null) delete this._byId[prevId];\n          if (id != null) this._byId[id] = model;\n        }\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var collectionMethods = { forEach: 3, each: 3, map: 3, collect: 3, reduce: 4,\n      foldl: 4, inject: 4, reduceRight: 4, foldr: 4, find: 3, detect: 3, filter: 3,\n      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 2,\n      contains: 2, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\n      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\n      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\n      isEmpty: 1, chain: 1, sample: 3, partition: 3 };\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  addUnderscoreMethods(Collection, collectionMethods, 'models');\n\n  // Underscore methods that take a property name as an argument.\n  var attributeMethods = ['groupBy', 'countBy', 'sortBy', 'indexBy'];\n\n  // Use attributes instead of properties.\n  _.each(attributeMethods, function(method) {\n    if (!_[method]) return;\n    Collection.prototype[method] = function(value, context) {\n      var iterator = _.isFunction(value) ? value : function(model) {\n        return model.get(value);\n      };\n      return _[method](this.models, iterator, context);\n    };\n  });\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be merged as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this._removeElement();\n      this.stopListening();\n      return this;\n    },\n\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function() {\n      this.$el.remove();\n    },\n\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function(element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n    },\n\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function(el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function(events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], _.bind(method, this));\n      }\n      return this;\n    },\n\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function(eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function(eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function(tagName) {\n      return document.createElement(tagName);\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function(attributes) {\n      this.$el.attr(attributes);\n    }\n\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error = options.error;\n    options.error = function(xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch':  'PATCH',\n    'delete': 'DELETE',\n    'read':   'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n                   .replace(optionalParam, '(?:$1)?')\n                   .replace(namedParam, function(match, optional) {\n                     return optional ? match : '([^/?]+)';\n                   })\n                   .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    _.bindAll(this, 'checkUrl');\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n\n    // Does the pathname match the root?\n    matchRoot: function() {\n      var path = this.decodeFragment(this.location.pathname);\n      var root = path.slice(0, this.root.length - 1) + '/';\n      return root === this.root;\n    },\n\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function(fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function() {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the pathname and search params, without the root.\n    getPath: function() {\n      var path = this.decodeFragment(\n        this.location.pathname + this.getSearch()\n      ).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function(fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange   = 'onhashchange' in window;\n      this._useHashChange   = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.history && this.history.pushState);\n      this._usePushState    = this._wantsPushState && this._hasPushState;\n      this.fragment         = this.getFragment();\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var root = this.root.slice(0, -1) || '/';\n          this.location.replace(root + '#' + this.getPath());\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {replace: true});\n        }\n\n      }\n\n      // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body;\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      }\n\n      // Add a cross-platform `addEventListener` shim for older browsers.\n      var addEventListener = window.addEventListener || function (eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      };\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function (eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n      // Remove window listeners.\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      }\n\n      // Clean up the iframe if necessary.\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      }\n\n      // Some environments will throw when clearing an undefined interval.\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n\n      // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.any(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      // Normalize the fragment.\n      fragment = this.getFragment(fragment || '');\n\n      // Don't include a trailing slash on the root.\n      var root = this.root;\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        root = root.slice(0, -1) || '/';\n      }\n      var url = root + fragment;\n\n      // Strip the hash and decode for matching.\n      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));\n\n      if (this.fragment === fragment) return;\n      this.fragment = fragment;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && (fragment !== this.getHash(this.iframe.contentWindow))) {\n          var iWindow = this.iframe.contentWindow;\n\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if (!options.replace) {\n            iWindow.document.open();\n            iWindow.document.close();\n          }\n\n          this._updateHash(iWindow.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent` constructor function.\n    var Surrogate = function(){ this.constructor = child; };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate;\n\n    // Add prototype properties (instance properties) to the subclass,\n    // if supplied.\n    if (protoProps) _.extend(child.prototype, protoProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n\n}));\n"]},"metadata":{},"sourceType":"script"}