{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robin\\\\Desktop\\\\Library\\\\Library-React\\\\my-app\\\\src\\\\containers\\\\Cart.js\";\nimport { useOktaAuth } from \"@okta/okta-react\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { connect } from 'react-redux';\nimport { clearProduct } from '../actions/RemoveProduct';\nimport '../css/navbar.css';\nimport { Button } from \"reactstrap\";\n\nconst Cart = ({\n  basketProps,\n  clearProduct\n}) => {\n  const {\n    authState,\n    authService\n  } = useOktaAuth();\n  const [userInfo, setUserInfo] = useState(null);\n  let productsInCart = [];\n  useEffect(() => {\n    if (!authState.isAuthenticated) {\n      setUserInfo(null);\n    } else {\n      authService.getUser().then(info => {\n        setUserInfo(info);\n      });\n    }\n  }, [authState, authService]); // Update if authState changes\n\n  const handleSubmit = product => {\n    let getProducts = [];\n    getProducts = product.map(item => item.id);\n    fetch('/order/api/v1/validate', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userName: userInfo.email,\n        bookId: getProducts\n      })\n    }).then(response => console.log(response));\n  };\n\n  productsInCart = basketProps.map(item => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"product\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ion-icon\", {\n      onClick: () => clearProduct(item.name),\n      name: \"close-circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: item.img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 115\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sm-hide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, item.name)));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"products-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"product-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"PRODUCT\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"products\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, productsInCart), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => handleSubmit(basketProps),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Checkout\"));\n};\n\nconst mapStateToProps = state => ({\n  basketProps: state.basketState\n});\n\nexport default connect(mapStateToProps, {\n  clearProduct\n})(Cart);","map":{"version":3,"sources":["C:/Users/robin/Desktop/Library/Library-React/my-app/src/containers/Cart.js"],"names":["useOktaAuth","React","useState","useEffect","Fragment","connect","clearProduct","Button","Cart","basketProps","authState","authService","userInfo","setUserInfo","productsInCart","isAuthenticated","getUser","then","info","handleSubmit","product","getProducts","map","item","id","fetch","method","headers","body","JSON","stringify","userName","email","bookId","response","console","log","name","img","mapStateToProps","state","basketState"],"mappings":"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","sourcesContent":["import { useOktaAuth } from \"@okta/okta-react\";\r\nimport React, { useState, useEffect, Fragment } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { clearProduct } from '../actions/RemoveProduct'\r\nimport '../css/navbar.css'\r\nimport { Button } from \"reactstrap\";\r\n\r\nconst Cart = ({basketProps,clearProduct}) => {\r\n  const { authState, authService } = useOktaAuth();\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  let productsInCart = [];\r\n\r\n  useEffect(() => {\r\n    if (!authState.isAuthenticated) {\r\n      \r\n      setUserInfo(null);\r\n    } else {\r\n      authService.getUser().then(info => {\r\n        setUserInfo(info);\r\n      });\r\n    }\r\n  }, [authState, authService]); // Update if authState changes\r\n\r\n\r\n\r\n  const handleSubmit = (product) => {\r\n      let getProducts = [];\r\n      getProducts = product.map(item => item.id)\r\n    fetch('/order/api/v1/validate', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            userName: userInfo.email, \r\n            bookId: getProducts, \r\n        })\r\n      })\r\n      .then(response => console.log(response))\r\n   \r\n   \r\n      \r\n  }\r\n  \r\n\r\n\r\n  productsInCart = basketProps.map(item=> {\r\n    return (\r\n        <Fragment key={item.id}>\r\n        <div className=\"product\"><ion-icon onClick={() => clearProduct(item.name)} name=\"close-circle\"></ion-icon><img src={item.img} />\r\n        <span className=\"sm-hide\">{item.name}</span>\r\n        </div>\r\n        </Fragment>\r\n    )\r\n    \r\n  });\r\n\r\nreturn (\r\n    <div className=\"products-container\">\r\n        <div className=\"product-header\">\r\n            <h5 className=\"product-title\">PRODUCT</h5>\r\n        </div>\r\n        <div className=\"products\">\r\n        {productsInCart}\r\n        </div>\r\n        <Button onClick={() => handleSubmit(basketProps)}>Checkout</Button>\r\n    </div>\r\n)\r\n \r\n}\r\nconst mapStateToProps = state => ({\r\n    basketProps: state.basketState\r\n});\r\n\r\nexport default connect(mapStateToProps, {clearProduct})(Cart);"]},"metadata":{},"sourceType":"module"}