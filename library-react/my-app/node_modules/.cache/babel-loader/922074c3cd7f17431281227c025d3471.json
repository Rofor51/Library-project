{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { useOktaAuth } from \"@okta/okta-react\";\nexport const AuthInformation = () => {\n  const {\n    authState,\n    authService\n  } = useOktaAuth();\n  const [authenticated, setAuthenticated] = useState(null);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    if (!authState.isAuthenticated) {\n      // When user isn't authenticated, forget any user info\n      setUserInfo(null);\n    } else {\n      authService.getUser().then(info => {\n        setUserInfo(info);\n      });\n    }\n  }, [authState, authService]); // Update if authState changes\n\n  useEffect(() => {\n    if (authenticated) {\n      authState.getUser().then(setUser);\n    } else {\n      setUser(null);\n    }\n  }, [authenticated]);\n  return [authenticated, user];\n};","map":{"version":3,"sources":["C:/Users/robin/Desktop/Library/Library-React/my-app/src/components/auth/AuthInformation.js"],"names":["useState","useEffect","useOktaAuth","AuthInformation","authState","authService","authenticated","setAuthenticated","user","setUser","isAuthenticated","setUserInfo","getUser","then","info"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACpC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA6BH,WAAW,EAA9C;AACA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACb,QAAI,CAACG,SAAS,CAACM,eAAf,EAAgC;AAC9B;AACAC,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAHD,MAGO;AACLN,MAAAA,WAAW,CAACO,OAAZ,GAAsBC,IAAtB,CAA2BC,IAAI,IAAI;AACjCH,QAAAA,WAAW,CAACG,IAAD,CAAX;AACD,OAFD;AAGD;AACF,GATO,EASL,CAACV,SAAD,EAAYC,WAAZ,CATK,CAAT,CALoC,CAcL;;AAE9BJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,aAAJ,EAAmB;AACfF,MAAAA,SAAS,CAACQ,OAAV,GAAoBC,IAApB,CAAyBJ,OAAzB;AACH,KAFD,MAEO;AACLA,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,GANQ,EAMN,CAACH,aAAD,CANM,CAAT;AAQA,SAAO,CAACA,aAAD,EAAgBE,IAAhB,CAAP;AACD,CAzBM","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useOktaAuth } from \"@okta/okta-react\";\r\n\r\nexport const AuthInformation = () => {\r\n const { authState, authService } = useOktaAuth();\r\n const [authenticated, setAuthenticated] = useState(null);\r\n const [user, setUser] = useState(null);\r\n\r\n useEffect(() => {\r\n    if (!authState.isAuthenticated) {\r\n      // When user isn't authenticated, forget any user info\r\n      setUserInfo(null);\r\n    } else {\r\n      authService.getUser().then(info => {\r\n        setUserInfo(info);\r\n      });\r\n    }\r\n  }, [authState, authService]); // Update if authState changes\r\n\r\n  useEffect(() => {\r\n    if (authenticated) {\r\n        authState.getUser().then(setUser);\r\n    } else {\r\n      setUser(null);\r\n    }\r\n  }, [authenticated]);\r\n\r\n  return [authenticated, user];\r\n};"]},"metadata":{},"sourceType":"module"}