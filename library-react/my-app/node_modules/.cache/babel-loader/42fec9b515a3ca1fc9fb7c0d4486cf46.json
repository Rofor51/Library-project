{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robin\\\\Desktop\\\\Library\\\\Library-React\\\\my-app\\\\src\\\\components\\\\auth\\\\AuthInformation.js\";\nimport { useOktaAuth } from \"@okta/okta-react\";\nimport React, { useState, useEffect } from \"react\";\n\nconst AuthInformation = () => {\n  const {\n    authState,\n    authService\n  } = useOktaAuth();\n  const [userInfo, setUserInfo] = useState(null);\n  useEffect(() => {\n    if (!authState.isAuthenticated) {\n      // When user isn't authenticated, forget any user info\n      setUserInfo(null);\n    } else {\n      authService.getUser().then(info => {\n        setUserInfo(info);\n      });\n    }\n  }, [authState, authService]); // Update if authState changes\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, userInfo && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, \"Welcome back, \", userInfo.name, \"!\")));\n};\n\nexport default AuthInformation;","map":{"version":3,"sources":["C:/Users/robin/Desktop/Library/Library-React/my-app/src/components/auth/AuthInformation.js"],"names":["useOktaAuth","React","useState","useEffect","AuthInformation","authState","authService","userInfo","setUserInfo","isAuthenticated","getUser","then","info","name"],"mappings":";AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC5B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA6BN,WAAW,EAA9C;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,IAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACE,SAAS,CAACI,eAAf,EAAgC;AAC9B;AACAD,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAHD,MAGO;AACLF,MAAAA,WAAW,CAACI,OAAZ,GAAsBC,IAAtB,CAA2BC,IAAI,IAAI;AACjCJ,QAAAA,WAAW,CAACI,IAAD,CAAX;AACD,OAFD;AAGD;AACF,GATQ,EASN,CAACP,SAAD,EAAYC,WAAZ,CATM,CAAT,CAJ4B,CAaE;;AAE9B,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QAAQ,iBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkBA,QAAQ,CAACM,IAA3B,MADF,CAFJ,CADF;AASD,CAxBD;;AA0BA,eAAeT,eAAf","sourcesContent":["import { useOktaAuth } from \"@okta/okta-react\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst AuthInformation = () => {\r\n  const { authState, authService } = useOktaAuth();\r\n  const [userInfo, setUserInfo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!authState.isAuthenticated) {\r\n      // When user isn't authenticated, forget any user info\r\n      setUserInfo(null);\r\n    } else {\r\n      authService.getUser().then(info => {\r\n        setUserInfo(info);\r\n      });\r\n    }\r\n  }, [authState, authService]); // Update if authState changes\r\n\r\n  return (\r\n    <div>\r\n      {userInfo && (\r\n        <div>\r\n          <p>Welcome back, {userInfo.name}!</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthInformation;"]},"metadata":{},"sourceType":"module"}