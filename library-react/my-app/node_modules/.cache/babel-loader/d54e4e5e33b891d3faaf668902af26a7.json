{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { useOktaAuth } from \"@okta/okta-react\";\nexport const AuthInformation = () => {\n  const {\n    authState,\n    authService\n  } = useOktaAuth();\n  const [userInfo, setUserInfo] = useState(null);\n  useEffect(() => {\n    if (!authState.isAuthenticated) {\n      // When user isn't authenticated, forget any user info\n      setUserInfo(null);\n    } else {\n      authService.getUser().then(info => {\n        setUserInfo(info);\n      });\n    }\n  }, [authState, authService]); // Update if authState changes\n\n  return [userInfo, setUserInfo];\n};","map":{"version":3,"sources":["C:/Users/robin/Desktop/Library/Library-React/my-app/src/components/auth/AuthInformation.js"],"names":["useState","useEffect","useOktaAuth","AuthInformation","authState","authService","userInfo","setUserInfo","isAuthenticated","getUser","then","info"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACpC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA6BH,WAAW,EAA9C;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACb,QAAI,CAACG,SAAS,CAACI,eAAf,EAAgC;AAC9B;AACAD,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAHD,MAGO;AACLF,MAAAA,WAAW,CAACI,OAAZ,GAAsBC,IAAtB,CAA2BC,IAAI,IAAI;AACjCJ,QAAAA,WAAW,CAACI,IAAD,CAAX;AACD,OAFD;AAGD;AACF,GATO,EASL,CAACP,SAAD,EAAYC,WAAZ,CATK,CAAT,CAJoC,CAaL;;AAI9B,SAAO,CAACC,QAAD,EAAWC,WAAX,CAAP;AACD,CAlBM","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useOktaAuth } from \"@okta/okta-react\";\r\n\r\nexport const AuthInformation = () => {\r\n const { authState, authService } = useOktaAuth();\r\n const [userInfo, setUserInfo] = useState(null);\r\n\r\n useEffect(() => {\r\n    if (!authState.isAuthenticated) {\r\n      // When user isn't authenticated, forget any user info\r\n      setUserInfo(null);\r\n    } else {\r\n      authService.getUser().then(info => {\r\n        setUserInfo(info);\r\n      });\r\n    }\r\n  }, [authState, authService]); // Update if authState changes\r\n\r\n  \r\n\r\n  return [userInfo, setUserInfo];\r\n};"]},"metadata":{},"sourceType":"module"}