{"ast":null,"code":"var cookies = require('./cookies');\n\nvar storageBuilder = require('./storageBuilder');\n\nvar config = require('./config'); // Building this as an object allows us to mock the functions in our tests\n\n\nvar storageUtil = {}; // IE11 bug that Microsoft doesn't plan to fix\n// https://connect.microsoft.com/IE/Feedback/Details/1496040\n\nstorageUtil.browserHasLocalStorage = function () {\n  try {\n    if (storageUtil.getLocalStorage()) {\n      return true;\n    } else {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n};\n\nstorageUtil.browserHasSessionStorage = function () {\n  try {\n    if (storageUtil.getSessionStorage()) {\n      return true;\n    } else {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n};\n\nstorageUtil.getHttpCache = function () {\n  if (storageUtil.browserHasLocalStorage()) {\n    return storageBuilder(storageUtil.getLocalStorage(), config.CACHE_STORAGE_NAME);\n  } else if (storageUtil.browserHasSessionStorage()) {\n    return storageBuilder(storageUtil.getSessionStorage(), config.CACHE_STORAGE_NAME);\n  } else {\n    return storageBuilder(storageUtil.getCookieStorage(), config.CACHE_STORAGE_NAME);\n  }\n};\n\nstorageUtil.getLocalStorage = function () {\n  return localStorage;\n};\n\nstorageUtil.getSessionStorage = function () {\n  return sessionStorage;\n}; // Provides webStorage-like interface for cookies\n\n\nstorageUtil.getCookieStorage = function () {\n  return {\n    getItem: cookies.getCookie,\n    setItem: function (key, value) {\n      // Cookie shouldn't expire\n      cookies.setCookie(key, value, '2038-01-19T03:14:07.000Z');\n    }\n  };\n};\n\nmodule.exports = storageUtil;","map":{"version":3,"sources":["C:/Users/robin/Desktop/Library/Library-React/my-app/node_modules/@okta/okta-signin-widget/node_modules/@okta/okta-auth-js/lib/storageUtil.js"],"names":["cookies","require","storageBuilder","config","storageUtil","browserHasLocalStorage","getLocalStorage","e","browserHasSessionStorage","getSessionStorage","getHttpCache","CACHE_STORAGE_NAME","getCookieStorage","localStorage","sessionStorage","getItem","getCookie","setItem","key","value","setCookie","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIC,cAAc,GAAGD,OAAO,CAAC,kBAAD,CAA5B;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,UAAD,CAApB,C,CAEA;;;AACA,IAAIG,WAAW,GAAG,EAAlB,C,CAEA;AACA;;AACAA,WAAW,CAACC,sBAAZ,GAAqC,YAAW;AAC9C,MAAI;AACF,QAAID,WAAW,CAACE,eAAZ,EAAJ,EAAmC;AACjC,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAP;AACD;AACF,GAND,CAME,OAAOC,CAAP,EAAU;AACV,WAAO,KAAP;AACD;AACF,CAVD;;AAYAH,WAAW,CAACI,wBAAZ,GAAuC,YAAW;AAChD,MAAI;AACF,QAAIJ,WAAW,CAACK,iBAAZ,EAAJ,EAAqC;AACnC,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAP;AACD;AACF,GAND,CAME,OAAOF,CAAP,EAAU;AACV,WAAO,KAAP;AACD;AACF,CAVD;;AAYAH,WAAW,CAACM,YAAZ,GAA2B,YAAW;AACpC,MAAIN,WAAW,CAACC,sBAAZ,EAAJ,EAA0C;AACxC,WAAOH,cAAc,CAACE,WAAW,CAACE,eAAZ,EAAD,EAAgCH,MAAM,CAACQ,kBAAvC,CAArB;AACD,GAFD,MAEO,IAAIP,WAAW,CAACI,wBAAZ,EAAJ,EAA4C;AACjD,WAAON,cAAc,CAACE,WAAW,CAACK,iBAAZ,EAAD,EAAkCN,MAAM,CAACQ,kBAAzC,CAArB;AACD,GAFM,MAEA;AACL,WAAOT,cAAc,CAACE,WAAW,CAACQ,gBAAZ,EAAD,EAAiCT,MAAM,CAACQ,kBAAxC,CAArB;AACD;AACF,CARD;;AAUAP,WAAW,CAACE,eAAZ,GAA8B,YAAW;AACvC,SAAOO,YAAP;AACD,CAFD;;AAIAT,WAAW,CAACK,iBAAZ,GAAgC,YAAW;AACzC,SAAOK,cAAP;AACD,CAFD,C,CAIA;;;AACAV,WAAW,CAACQ,gBAAZ,GAA+B,YAAW;AACxC,SAAO;AACLG,IAAAA,OAAO,EAAEf,OAAO,CAACgB,SADZ;AAELC,IAAAA,OAAO,EAAE,UAASC,GAAT,EAAcC,KAAd,EAAqB;AAC5B;AACAnB,MAAAA,OAAO,CAACoB,SAAR,CAAkBF,GAAlB,EAAuBC,KAAvB,EAA8B,0BAA9B;AACD;AALI,GAAP;AAOD,CARD;;AAUAE,MAAM,CAACC,OAAP,GAAiBlB,WAAjB","sourcesContent":["var cookies = require('./cookies');\nvar storageBuilder = require('./storageBuilder');\nvar config = require('./config');\n\n// Building this as an object allows us to mock the functions in our tests\nvar storageUtil = {};\n\n// IE11 bug that Microsoft doesn't plan to fix\n// https://connect.microsoft.com/IE/Feedback/Details/1496040\nstorageUtil.browserHasLocalStorage = function() {\n  try {\n    if (storageUtil.getLocalStorage()) {\n      return true;\n    } else {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n};\n\nstorageUtil.browserHasSessionStorage = function() {\n  try {\n    if (storageUtil.getSessionStorage()) {\n      return true;\n    } else {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n};\n\nstorageUtil.getHttpCache = function() {\n  if (storageUtil.browserHasLocalStorage()) {\n    return storageBuilder(storageUtil.getLocalStorage(), config.CACHE_STORAGE_NAME);\n  } else if (storageUtil.browserHasSessionStorage()) {\n    return storageBuilder(storageUtil.getSessionStorage(), config.CACHE_STORAGE_NAME);\n  } else {\n    return storageBuilder(storageUtil.getCookieStorage(), config.CACHE_STORAGE_NAME);\n  }\n};\n\nstorageUtil.getLocalStorage = function() {\n  return localStorage;\n};\n\nstorageUtil.getSessionStorage = function() {\n  return sessionStorage;\n};\n\n// Provides webStorage-like interface for cookies\nstorageUtil.getCookieStorage = function() {\n  return {\n    getItem: cookies.getCookie,\n    setItem: function(key, value) {\n      // Cookie shouldn't expire\n      cookies.setCookie(key, value, '2038-01-19T03:14:07.000Z');\n    }\n  };\n};\n\nmodule.exports = storageUtil;\n"]},"metadata":{},"sourceType":"script"}