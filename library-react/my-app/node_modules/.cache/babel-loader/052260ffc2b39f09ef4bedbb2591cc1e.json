{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robin\\\\Desktop\\\\sso\\\\my-app\\\\src\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport OktaSignInWidget from './OktaSignInWidget';\nimport { withOktaAuth } from '@okta/okta-react';\nexport default withOktaAuth(class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.onSuccess = this.onSuccess.bind(this);\n    this.onError = this.onError.bind(this);\n  }\n\n  onSuccess(res) {\n    if (res.status === 'SUCCESS') {\n      return this.props.authService.redirect({\n        sessionToken: res.session.token\n      });\n    } else {// The user can be in another authentication state that requires further action.\n      // For more information about these states, see:\n      //   https://github.com/okta/okta-signin-widget#rendereloptions-success-error\n    }\n  }\n\n  onError(err) {\n    console.log('error logging in', err);\n  }\n\n  render() {\n    console.log;\n    if (this.props.authState.isPending) return null;\n    return this.props.authState.isAuthenticated ? /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }) : /*#__PURE__*/React.createElement(OktaSignInWidget, {\n      baseUrl: this.props.baseUrl,\n      onSuccess: this.onSuccess,\n      onError: this.onError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    });\n  }\n\n});","map":{"version":3,"sources":["C:/Users/robin/Desktop/sso/my-app/src/Login.js"],"names":["React","Component","Redirect","OktaSignInWidget","withOktaAuth","Login","constructor","props","onSuccess","bind","onError","res","status","authService","redirect","sessionToken","session","token","err","console","log","render","authState","isPending","isAuthenticated","pathname","baseUrl"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AAEA,eAAeA,YAAY,CAAC,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AACxDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACD;;AAEDD,EAAAA,SAAS,CAACG,GAAD,EAAM;AACb,QAAIA,GAAG,CAACC,MAAJ,KAAe,SAAnB,EAA8B;AAC5B,aAAO,KAAKL,KAAL,CAAWM,WAAX,CAAuBC,QAAvB,CAAgC;AACrCC,QAAAA,YAAY,EAAEJ,GAAG,CAACK,OAAJ,CAAYC;AADW,OAAhC,CAAP;AAGF,KAJA,MAIM,CACN;AACA;AACA;AACC;AACF;;AAEDP,EAAAA,OAAO,CAACQ,GAAD,EAAM;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,GAAhC;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACLF,IAAAA,OAAO,CAACC,GAAR;AACF,QAAI,KAAKb,KAAL,CAAWe,SAAX,CAAqBC,SAAzB,EAAoC,OAAO,IAAP;AACpC,WAAO,KAAKhB,KAAL,CAAWe,SAAX,CAAqBE,eAArB,gBACL,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,gBAEL,oBAAC,gBAAD;AACE,MAAA,OAAO,EAAE,KAAKlB,KAAL,CAAWmB,OADtB;AAEE,MAAA,SAAS,EAAE,KAAKlB,SAFlB;AAGE,MAAA,OAAO,EAAE,KAAKE,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF;AAMD;;AAhCuD,CAA/B,CAA3B","sourcesContent":["import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport OktaSignInWidget from './OktaSignInWidget';\r\nimport { withOktaAuth } from '@okta/okta-react';\r\n\r\nexport default withOktaAuth(class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onSuccess = this.onSuccess.bind(this);\r\n    this.onError = this.onError.bind(this);\r\n  }\r\n\r\n  onSuccess(res) {\r\n    if (res.status === 'SUCCESS') {\r\n      return this.props.authService.redirect({\r\n        sessionToken: res.session.token\r\n      });\r\n   } else {\r\n    // The user can be in another authentication state that requires further action.\r\n    // For more information about these states, see:\r\n    //   https://github.com/okta/okta-signin-widget#rendereloptions-success-error\r\n    }\r\n  }\r\n\r\n  onError(err) {\r\n    console.log('error logging in', err);\r\n  }\r\n\r\n  render() {\r\n      console.log\r\n    if (this.props.authState.isPending) return null;\r\n    return this.props.authState.isAuthenticated ?\r\n      <Redirect to={{ pathname: '/' }}/> :\r\n      <OktaSignInWidget\r\n        baseUrl={this.props.baseUrl}\r\n        onSuccess={this.onSuccess}\r\n        onError={this.onError}/>;\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}