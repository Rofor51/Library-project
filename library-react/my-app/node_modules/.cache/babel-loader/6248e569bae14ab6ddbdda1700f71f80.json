{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nimport { useOktaAuth } from \"@okta/okta-react\";\nexport const useAuth = auth => {\n  const {\n    authState,\n    authService\n  } = useOktaAuth();\n  const [userInfo, setUserInfo] = useState(null);\n  useEffect(() => {\n    if (!authState.isAuthenticated) {\n      // When user isn't authenticated, forget any user info\n      setUserInfo(null);\n    } else {\n      authService.getUser().then(info => {\n        setUserInfo(info);\n      });\n    }\n  }, [authState, authService]); // Update if authState changes\n\n  return [authState, authService];\n};","map":{"version":3,"sources":["C:/Users/robin/Desktop/Library/Library-React/my-app/src/components/auth/GetUser.js"],"names":["React","useState","useEffect","useOktaAuth","useAuth","auth","authState","authService","userInfo","setUserInfo","isAuthenticated","getUser","then","info"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,OAAO,GAAGC,IAAI,IAAI;AAC3B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA6BJ,WAAW,EAA9C;AACF,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAxC;AAEEC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACI,SAAS,CAACI,eAAf,EAAgC;AAC9B;AACAD,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAHD,MAGO;AACLF,MAAAA,WAAW,CAACI,OAAZ,GAAsBC,IAAtB,CAA2BC,IAAI,IAAI;AACjCJ,QAAAA,WAAW,CAACI,IAAD,CAAX;AACD,OAFD;AAGD;AACF,GATM,EASJ,CAACP,SAAD,EAAYC,WAAZ,CATI,CAAT,CAJ2B,CAaK;;AAE9B,SAAM,CAACD,SAAD,EAAYC,WAAZ,CAAN;AACD,CAhBE","sourcesContent":["import React, { useState, useEffect} from \"react\";\r\nimport { useOktaAuth } from \"@okta/okta-react\";\r\n\r\nexport const useAuth = auth => {\r\n    const { authState, authService } = useOktaAuth();\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  \r\n    useEffect(() => {\r\n        if (!authState.isAuthenticated) {\r\n          // When user isn't authenticated, forget any user info\r\n          setUserInfo(null);\r\n        } else {\r\n          authService.getUser().then(info => {\r\n            setUserInfo(info);\r\n          });\r\n        }\r\n      }, [authState, authService]); // Update if authState changes\r\n\r\n      return[authState, authService];\r\n    }\r\n  \r\n  \r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}