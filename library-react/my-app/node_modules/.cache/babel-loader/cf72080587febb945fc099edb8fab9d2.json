{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robin\\\\Desktop\\\\Library\\\\Library-React\\\\my-app\\\\src\\\\components\\\\admin\\\\BookEdit.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { instanceOf } from 'prop-types';\nimport './bookedit.css';\n\nclass BookEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.emptyItem = {\n      bookId: '',\n      title: '',\n      pages: '',\n      year: '',\n      authors: [{\n        firstName: \"\",\n        lastName: \"\"\n      }],\n      imageLink: '',\n      inStore: ''\n    };\n\n    this.handleInputChange = (e, index) => {\n      console.log(this.state.item);\n      const {\n        name,\n        value\n      } = e.target;\n      const list = [...this.state.item.authors];\n      list[index][name] = value;\n      this.setState({\n        list\n      });\n    };\n\n    this.handleAddClick = () => {\n      this.setState([...this.state.item.authors, {\n        firstName: \"\",\n        lastName: \"\"\n      }]);\n    };\n\n    this.handleRemoveClick = index => {\n      const list = [...this.state.item.authors];\n      list.splice(index, 1);\n      this.setState(list);\n    };\n\n    this.state = {\n      item: this.emptyItem\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    if (this.props.match.params.id !== 'new') {\n      try {\n        const group = await (await fetch(`/catalog/api/v1/books/${this.props.match.params.id}`)).json();\n        this.setState({\n          item: group\n        });\n      } catch (error) {\n        this.props.history.push('/');\n      }\n    }\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    let item = { ...this.state.item\n    };\n\n    if (name === 'authors') {\n      console.log(value.split(\" \"));\n      item[name] = value.split(\",\");\n    } else {\n      item[name] = value;\n    }\n\n    console.log(item);\n    this.setState({\n      item\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const {\n      item\n    } = this.state;\n    console.log(item);\n    await fetch('/book/api/v1/books' + (item.bookId ? '/' + item.bookId : ''), {\n      method: item.id ? 'PUT' : 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    });\n    this.props.history.push('/groups');\n  }\n\n  render() {\n    const {\n      item\n    } = this.state;\n    console.log(item);\n    const title = /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }, item.id ? 'Edit Book' : 'Add New Book');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, title, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"title\",\n      id: \"title\",\n      value: item.title || '',\n      onChange: this.handleChange,\n      autoComplete: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"pages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, \"Pages\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"pages\",\n      id: \"pages\",\n      value: item.pages || '',\n      onChange: this.handleChange,\n      autoComplete: \"pages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, \"Year\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"year\",\n      id: \"year\",\n      value: item.year || '',\n      onChange: this.handleChange,\n      autoComplete: \"year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    })), item.authors.map((x, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        name: \"firstName\",\n        placeholder: \"Enter First Name\",\n        value: x.firstName,\n        onChange: e => this.handleInputChange(e, i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"ml10\",\n        name: \"lastName\",\n        placeholder: \"Enter Last Name\",\n        value: x.lastName,\n        onChange: e => this.handleInputChange(e, i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"btn-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }, item.authors !== 1 && /*#__PURE__*/React.createElement(\"button\", {\n        className: \"mr10\",\n        onClick: () => this.handleRemoveClick(i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 38\n        }\n      }, \"Remove\"), item.authors - 1 === i && /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleAddClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 42\n        }\n      }, \"Add\")));\n    }), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"imageLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, \"Imagelink\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"imageLink\",\n      id: \"imageLink\",\n      value: item.imageLink || '',\n      onChange: this.handleChange,\n      autoComplete: \"imageLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"inStore\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    }, \"Available now\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"inStore\",\n      id: \"inStore\",\n      value: item.inStore || '',\n      onChange: this.handleChange,\n      autoComplete: \"inStore\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, \"Save\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      tag: Link,\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, \"Cancel\")))));\n  }\n\n}\n\nexport default withRouter(BookEdit);","map":{"version":3,"sources":["C:/Users/robin/Desktop/Library/Library-React/my-app/src/components/admin/BookEdit.js"],"names":["React","Component","Fragment","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","instanceOf","BookEdit","constructor","props","emptyItem","bookId","title","pages","year","authors","firstName","lastName","imageLink","inStore","handleInputChange","e","index","console","log","state","item","name","value","target","list","setState","handleAddClick","handleRemoveClick","splice","handleChange","bind","handleSubmit","componentDidMount","match","params","id","group","fetch","json","error","history","push","event","split","preventDefault","method","headers","body","JSON","stringify","render","map","x","i"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { instanceOf } from 'prop-types';\r\nimport './bookedit.css'\r\n\r\nclass BookEdit extends Component {\r\n \r\n  emptyItem = {\r\n    bookId: '',\r\n    title: '',\r\n    pages: '',\r\n    year: '',\r\n    authors: [{firstName:\"\", lastName:\"\" }],\r\n    imageLink: '',\r\n    inStore: ''\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyItem,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      try {\r\n        const group = await (await fetch(`/catalog/api/v1/books/${this.props.match.params.id}`)).json();\r\n        this.setState({item: group});\r\n      } catch (error) {\r\n        this.props.history.push('/');\r\n      }\r\n    }\r\n  }\r\n\r\n   handleInputChange = (e, index) => {\r\n       console.log(this.state.item)\r\n    const { name, value } = e.target;\r\n    const list = [...this.state.item.authors];\r\n    list[index][name] = value;\r\n    this.setState({list});\r\n  };\r\n\r\n   handleAddClick = () => {\r\n    this.setState([...this.state.item.authors, { firstName: \"\", lastName: \"\" }]);\r\n  };\r\n\r\n   handleRemoveClick = index => {\r\n    const list = [...this.state.item.authors];\r\n    list.splice(index, 1);\r\n    this.setState(list);\r\n  };\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    if(name === 'authors') {\r\n        console.log(value.split(\" \"))\r\n        item[name] = value.split(\",\")   \r\n    }\r\n   \r\n    else {\r\n        item[name] = value;  \r\n    }\r\n    console.log(item)\r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n    console.log(item)\r\n    await fetch('/book/api/v1/books' + (item.bookId ? '/' + item.bookId : '') , {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push('/groups');\r\n  }\r\n\r\n  render() {\r\n    \r\n    const {item} = this.state;\r\n    console.log(item)\r\n    const title = <h2>{item.id ? 'Edit Book' : 'Add New Book'}</h2>;\r\n\r\n    return <div>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"title\">Title</Label>\r\n            <Input type=\"text\" name=\"title\" id=\"title\" value={item.title || ''}\r\n                   onChange={this.handleChange} autoComplete=\"title\"/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"pages\">Pages</Label>\r\n            <Input type=\"text\" name=\"pages\" id=\"pages\" value={item.pages || ''}\r\n                   onChange={this.handleChange} autoComplete=\"pages\"/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"year\">Year</Label>\r\n            <Input type=\"text\" name=\"year\" id=\"year\" value={item.year || ''}\r\n                   onChange={this.handleChange} autoComplete=\"year\"/>\r\n          </FormGroup>\r\n       \r\n          {item.authors.map((x, i) => {\r\n        return (\r\n          <div className=\"box\">\r\n            <input\r\n              name=\"firstName\"\r\n              placeholder=\"Enter First Name\"\r\n              value={x.firstName}\r\n              onChange={e => this.handleInputChange(e, i)}\r\n            />\r\n            <input\r\n              className=\"ml10\"\r\n              name=\"lastName\"\r\n              placeholder=\"Enter Last Name\"\r\n              value={x.lastName}\r\n              onChange={e =>  this.handleInputChange(e, i)}\r\n            />\r\n            <div className=\"btn-box\">\r\n              {item.authors !== 1 && <button\r\n                className=\"mr10\"\r\n                onClick={() =>  this.handleRemoveClick(i)}>Remove</button>}\r\n              {item.authors - 1 === i && <button onClick={this.handleAddClick}>Add</button>}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n            <FormGroup>\r\n              <Label for=\"imageLink\">Imagelink</Label>\r\n              <Input type=\"text\" name=\"imageLink\" id=\"imageLink\" value={item.imageLink || ''}\r\n                     onChange={this.handleChange} autoComplete=\"imageLink\"/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"inStore\">Available now</Label>\r\n              <Input type=\"text\" name=\"inStore\" id=\"inStore\" value={item.inStore || ''}\r\n                     onChange={this.handleChange} autoComplete=\"inStore\"/>\r\n            </FormGroup>\r\n   \r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to=\"/\">Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default (withRouter(BookEdit));"]},"metadata":{},"sourceType":"module"}