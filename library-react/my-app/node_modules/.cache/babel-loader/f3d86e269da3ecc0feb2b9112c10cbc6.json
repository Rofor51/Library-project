{"ast":null,"code":"import { ADD_PRODUCT_BASKET, GET_NUMBERS_IN_BASKET } from \"../actions/types\";\nconst initialState = {\n  addedIds: [],\n  addedItems: []\n};\n\nconst test = (state = initialState.addedIds, action) => {\n  switch (action.type) {\n    case ADD_PRODUCT_BASKET:\n      return {};\n\n    case GET_NUMBERS_IN_BASKET:\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst basketReducer = (state = initialState.addedIds, action) => {\n  switch (action.type) {\n    case ADD_PRODUCT_BASKET:\n      if (state.indexOf(action.bookId) !== -1) {\n        return state;\n      }\n\n      return [...state, action.bookId];\n\n    case GET_NUMBERS_IN_BASKET:\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default basketReducer;","map":{"version":3,"sources":["C:/Users/robin/Desktop/Library/Library-React/my-app/src/reducers/basketReducer.js"],"names":["ADD_PRODUCT_BASKET","GET_NUMBERS_IN_BASKET","initialState","addedIds","addedItems","test","state","action","type","basketReducer","indexOf","bookId"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,qBAA7B,QAA0D,kBAA1D;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,UAAU,EAAE;AAFK,CAArB;;AAKA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGJ,YAAY,CAACC,QAAtB,EAAgCI,MAAhC,KAA2C;AACpD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,kBAAL;AACI,aAAO,EAAP;;AAGJ,SAAKC,qBAAL;AACI,aAAO,EACH,GAAGK;AADA,OAAP;;AAGJ;AACI,aAAOA,KAAP;AAVR;AAaH,CAdD;;AAiBG,MAAMG,aAAa,GAAG,CAACH,KAAK,GAAGJ,YAAY,CAACC,QAAtB,EAAgCI,MAAhC,KAA2C;AAChE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,kBAAL;AACI,UAAIM,KAAK,CAACI,OAAN,CAAcH,MAAM,CAACI,MAArB,MAAiC,CAAC,CAAtC,EAAyC;AACrC,eAAOL,KAAP;AACD;;AAED,aAAO,CAAE,GAAGA,KAAL,EAAYC,MAAM,CAACI,MAAnB,CAAP;;AACN,SAAKV,qBAAL;AACI,aAAO,EACH,GAAGK;AADA,OAAP;;AAGJ;AACI,aAAOA,KAAP;AAZR;AAeH,CAhBE;;AAoBH,eAAeG,aAAf","sourcesContent":["import { ADD_PRODUCT_BASKET, GET_NUMBERS_IN_BASKET } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    addedIds: [],\r\n    addedItems: [],\r\n}\r\n\r\nconst test = (state = initialState.addedIds, action) => {\r\n    switch(action.type) {\r\n        case ADD_PRODUCT_BASKET:\r\n            return {\r\n                \r\n            }\r\n        case GET_NUMBERS_IN_BASKET:\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n\r\n   const basketReducer = (state = initialState.addedIds, action) => {\r\n    switch(action.type) {\r\n        case ADD_PRODUCT_BASKET:\r\n            if (state.indexOf(action.bookId) !== -1) {\r\n                return state\r\n              }\r\n              \r\n              return [ ...state, action.bookId]\r\n        case GET_NUMBERS_IN_BASKET:\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n\r\n    \r\nexport default basketReducer;"]},"metadata":{},"sourceType":"module"}