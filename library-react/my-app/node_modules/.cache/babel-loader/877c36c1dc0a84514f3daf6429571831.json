{"ast":null,"code":"var util = require('./util');\n\nfunction setCookie(name, value, expiresAt) {\n  var expiresText = '';\n\n  if (expiresAt) {\n    expiresText = ' expires=' + util.isoToUTCString(expiresAt) + ';';\n  }\n\n  var cookieText = name + '=' + value + '; path=/;' + expiresText;\n\n  setCookie._setDocumentCookie(cookieText);\n\n  return cookieText;\n} // Exposed for testing\n\n\nsetCookie._setDocumentCookie = function (cookieText) {\n  document.cookie = cookieText;\n};\n\nfunction getCookie(name) {\n  var pattern = new RegExp(name + '=([^;]*)'),\n      matched = getCookie._getDocumentCookie().match(pattern);\n\n  if (matched) {\n    var cookie = matched[1];\n    return cookie;\n  }\n} // Exposed for testing\n\n\ngetCookie._getDocumentCookie = function () {\n  return document.cookie;\n};\n\nfunction deleteCookie(name) {\n  setCookie(name, '', '1970-01-01T00:00:00Z');\n}\n\nmodule.exports = {\n  setCookie: setCookie,\n  getCookie: getCookie,\n  deleteCookie: deleteCookie\n};","map":{"version":3,"sources":["C:/Users/robin/Desktop/sso/my-app/node_modules/@okta/okta-signin-widget/node_modules/@okta/okta-auth-js/lib/cookies.js"],"names":["util","require","setCookie","name","value","expiresAt","expiresText","isoToUTCString","cookieText","_setDocumentCookie","document","cookie","getCookie","pattern","RegExp","matched","_getDocumentCookie","match","deleteCookie","module","exports"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;;AAEA,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,SAAhC,EAA2C;AACzC,MAAIC,WAAW,GAAG,EAAlB;;AACA,MAAID,SAAJ,EAAe;AACbC,IAAAA,WAAW,GAAG,cAAcN,IAAI,CAACO,cAAL,CAAoBF,SAApB,CAAd,GAA+C,GAA7D;AACD;;AAED,MAAIG,UAAU,GAAGL,IAAI,GAAG,GAAP,GAAaC,KAAb,GAAqB,WAArB,GAAmCE,WAApD;;AACAJ,EAAAA,SAAS,CAACO,kBAAV,CAA6BD,UAA7B;;AAEA,SAAOA,UAAP;AACD,C,CAED;;;AACAN,SAAS,CAACO,kBAAV,GAA+B,UAASD,UAAT,EAAqB;AAClDE,EAAAA,QAAQ,CAACC,MAAT,GAAkBH,UAAlB;AACD,CAFD;;AAIA,SAASI,SAAT,CAAmBT,IAAnB,EAAyB;AACvB,MAAIU,OAAO,GAAG,IAAIC,MAAJ,CAAWX,IAAI,GAAG,UAAlB,CAAd;AAAA,MACIY,OAAO,GAAGH,SAAS,CAACI,kBAAV,GAA+BC,KAA/B,CAAqCJ,OAArC,CADd;;AAGA,MAAIE,OAAJ,EAAa;AACX,QAAIJ,MAAM,GAAGI,OAAO,CAAC,CAAD,CAApB;AACA,WAAOJ,MAAP;AACD;AACF,C,CAED;;;AACAC,SAAS,CAACI,kBAAV,GAA+B,YAAW;AACxC,SAAON,QAAQ,CAACC,MAAhB;AACD,CAFD;;AAIA,SAASO,YAAT,CAAsBf,IAAtB,EAA4B;AAC1BD,EAAAA,SAAS,CAACC,IAAD,EAAO,EAAP,EAAW,sBAAX,CAAT;AACD;;AAEDgB,MAAM,CAACC,OAAP,GAAiB;AACflB,EAAAA,SAAS,EAAEA,SADI;AAEfU,EAAAA,SAAS,EAAEA,SAFI;AAGfM,EAAAA,YAAY,EAAEA;AAHC,CAAjB","sourcesContent":["var util = require('./util');\n\nfunction setCookie(name, value, expiresAt) {\n  var expiresText = '';\n  if (expiresAt) {\n    expiresText = ' expires=' + util.isoToUTCString(expiresAt) + ';';\n  }\n\n  var cookieText = name + '=' + value + '; path=/;' + expiresText;\n  setCookie._setDocumentCookie(cookieText);\n\n  return cookieText;\n}\n\n// Exposed for testing\nsetCookie._setDocumentCookie = function(cookieText) {\n  document.cookie = cookieText;\n};\n\nfunction getCookie(name) {\n  var pattern = new RegExp(name + '=([^;]*)'),\n      matched = getCookie._getDocumentCookie().match(pattern);\n\n  if (matched) {\n    var cookie = matched[1];\n    return cookie;\n  }\n}\n\n// Exposed for testing\ngetCookie._getDocumentCookie = function() {\n  return document.cookie;\n};\n\nfunction deleteCookie(name) {\n  setCookie(name, '', '1970-01-01T00:00:00Z');\n}\n\nmodule.exports = {\n  setCookie: setCookie,\n  getCookie: getCookie,\n  deleteCookie: deleteCookie\n};\n"]},"metadata":{},"sourceType":"script"}