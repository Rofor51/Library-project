{"ast":null,"code":"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useOktaAuth } from '@okta/okta-react';\nimport { userInfo } from '../auth/UserInformation';\nuseEffect(() => {\n  if (!authState.isAuthenticated) {\n    // When user isn't authenticated, forget any user info\n    setUserInfo(null);\n  } else {\n    authService.getUser().then(info => {\n      setUserInfo(info);\n    });\n  }\n}, [authState, authService]); // Update if authState changes\n\nexport const user = () => {\n  const {\n    authState,\n    authService\n  } = useOktaAuth();\n  const [userInfo, setUserInfo] = useState(null);\n  return () => {\n    \"YO!\";\n  };\n};","map":{"version":3,"sources":["C:/Users/robin/Desktop/Library/Library-React/my-app/src/components/auth/UserInformation.js"],"names":["React","Link","useOktaAuth","userInfo","useEffect","authState","isAuthenticated","setUserInfo","authService","getUser","then","info","user","useState"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAAQC,QAAR,QAAuB,yBAAvB;AACAC,SAAS,CAAC,MAAM;AACZ,MAAI,CAACC,SAAS,CAACC,eAAf,EAAgC;AAC9B;AACAC,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAHD,MAGO;AACLC,IAAAA,WAAW,CAACC,OAAZ,GAAsBC,IAAtB,CAA2BC,IAAI,IAAI;AACjCJ,MAAAA,WAAW,CAACI,IAAD,CAAX;AACD,KAFD;AAGD;AACF,CATM,EASJ,CAACN,SAAD,EAAYG,WAAZ,CATI,CAAT,C,CASgC;;AAGhC,OAAO,MAAMI,IAAI,GAAG,MAAM;AACtB,QAAM;AAAEP,IAAAA,SAAF;AAAaG,IAAAA;AAAb,MAA6BN,WAAW,EAA9C;AACA,QAAM,CAACC,QAAD,EAAWI,WAAX,IAA0BM,QAAQ,CAAC,IAAD,CAAxC;AAIA,SAAO,MAAM;AACT;AACF,GAFF;AAIH,CAVM","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useOktaAuth } from '@okta/okta-react';\r\nimport {userInfo} from '../auth/UserInformation'\r\nuseEffect(() => {\r\n    if (!authState.isAuthenticated) {\r\n      // When user isn't authenticated, forget any user info\r\n      setUserInfo(null);\r\n    } else {\r\n      authService.getUser().then(info => {\r\n        setUserInfo(info);\r\n      });\r\n    }\r\n  }, [authState, authService]); // Update if authState changes\r\n\r\n\r\nexport const user = () => {\r\n    const { authState, authService } = useOktaAuth();\r\n    const [userInfo, setUserInfo] = useState(null);\r\n  \r\n   \r\n\r\n    return () => {\r\n        \"YO!\"\r\n     }\r\n  \r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}