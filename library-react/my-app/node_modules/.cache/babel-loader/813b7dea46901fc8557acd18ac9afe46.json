{"ast":null,"code":"/* eslint-disable complexity */\nvar util = require('./util');\n\nvar cookies = require('./cookies');\n\nvar storageUtil = require('./storageUtil');\n\nvar Q = require('q');\n\nvar AuthApiError = require('./errors/AuthApiError');\n\nvar config = require('./config');\n\nfunction httpRequest(sdk, options) {\n  options = options || {};\n  var url = options.url,\n      method = options.method,\n      args = options.args,\n      saveAuthnState = options.saveAuthnState,\n      accessToken = options.accessToken,\n      httpCache = storageUtil.getHttpCache();\n\n  if (options.cacheResponse) {\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[url];\n\n    if (cachedResponse && Date.now() / 1000 < cachedResponse.expiresAt) {\n      return Q.resolve(cachedResponse.response);\n    }\n  }\n\n  var headers = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    'X-Okta-User-Agent-Extended': sdk.userAgent\n  };\n  util.extend(headers, sdk.options.headers, options.headers);\n\n  if (accessToken && util.isString(accessToken)) {\n    headers['Authorization'] = 'Bearer ' + accessToken;\n  }\n\n  var ajaxOptions = {\n    headers: headers,\n    data: args || undefined\n  };\n  var err, res;\n  return new Q(sdk.options.ajaxRequest(method, url, ajaxOptions)).then(function (resp) {\n    res = resp.responseText;\n\n    if (res && util.isString(res)) {\n      res = JSON.parse(res);\n    }\n\n    if (saveAuthnState) {\n      if (!res.stateToken) {\n        cookies.deleteCookie(config.STATE_TOKEN_COOKIE_NAME);\n      }\n    }\n\n    if (res && res.stateToken && res.expiresAt) {\n      cookies.setCookie(config.STATE_TOKEN_COOKIE_NAME, res.stateToken, res.expiresAt);\n    }\n\n    if (res && options.cacheResponse) {\n      httpCache.updateStorage(url, {\n        expiresAt: Math.floor(Date.now() / 1000) + config.DEFAULT_CACHE_DURATION,\n        response: res\n      });\n    }\n\n    return res;\n  }).fail(function (resp) {\n    var serverErr = resp.responseText || {};\n\n    if (util.isString(serverErr)) {\n      try {\n        serverErr = JSON.parse(serverErr);\n      } catch (e) {\n        serverErr = {\n          errorSummary: 'Unknown error'\n        };\n      }\n    }\n\n    if (resp.status >= 500) {\n      serverErr.errorSummary = 'Unknown error';\n    }\n\n    if (sdk.options.transformErrorXHR) {\n      resp = sdk.options.transformErrorXHR(util.clone(resp));\n    }\n\n    err = new AuthApiError(serverErr, resp);\n\n    if (err.errorCode === 'E0000011') {\n      cookies.deleteCookie(config.STATE_TOKEN_COOKIE_NAME);\n    }\n\n    throw err;\n  });\n}\n\nfunction get(sdk, url, options) {\n  url = util.isAbsoluteUrl(url) ? url : sdk.options.url + url;\n  var getOptions = {\n    url: url,\n    method: 'GET'\n  };\n  util.extend(getOptions, options);\n  return httpRequest(sdk, getOptions);\n}\n\nfunction post(sdk, url, args, options) {\n  url = util.isAbsoluteUrl(url) ? url : sdk.options.url + url;\n  var postOptions = {\n    url: url,\n    method: 'POST',\n    args: args,\n    saveAuthnState: true\n  };\n  util.extend(postOptions, options);\n  return httpRequest(sdk, postOptions);\n}\n\nmodule.exports = {\n  get: get,\n  post: post,\n  httpRequest: httpRequest\n};","map":{"version":3,"sources":["C:/Users/robin/Desktop/sso/my-app/node_modules/@okta/okta-signin-widget/node_modules/@okta/okta-auth-js/lib/http.js"],"names":["util","require","cookies","storageUtil","Q","AuthApiError","config","httpRequest","sdk","options","url","method","args","saveAuthnState","accessToken","httpCache","getHttpCache","cacheResponse","cacheContents","getStorage","cachedResponse","Date","now","expiresAt","resolve","response","headers","userAgent","extend","isString","ajaxOptions","data","undefined","err","res","ajaxRequest","then","resp","responseText","JSON","parse","stateToken","deleteCookie","STATE_TOKEN_COOKIE_NAME","setCookie","updateStorage","Math","floor","DEFAULT_CACHE_DURATION","fail","serverErr","e","errorSummary","status","transformErrorXHR","clone","errorCode","get","isAbsoluteUrl","getOptions","post","postOptions","module","exports"],"mappings":"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","sourcesContent":["/* eslint-disable complexity */\nvar util = require('./util');\nvar cookies = require('./cookies');\nvar storageUtil = require('./storageUtil');\nvar Q = require('q');\nvar AuthApiError = require('./errors/AuthApiError');\nvar config = require('./config');\n\nfunction httpRequest(sdk, options) {\n  options = options || {};\n  var url = options.url,\n      method = options.method,\n      args = options.args,\n      saveAuthnState = options.saveAuthnState,\n      accessToken = options.accessToken,\n      httpCache = storageUtil.getHttpCache();\n\n  if (options.cacheResponse) {\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[url];\n    if (cachedResponse && Date.now()/1000 < cachedResponse.expiresAt) {\n      return Q.resolve(cachedResponse.response);\n    }\n  }\n\n  var headers = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    'X-Okta-User-Agent-Extended': sdk.userAgent\n  };\n  util.extend(headers, sdk.options.headers, options.headers);\n\n  if (accessToken && util.isString(accessToken)) {\n    headers['Authorization'] = 'Bearer ' + accessToken;\n  }\n\n  var ajaxOptions = {\n    headers: headers,\n    data: args || undefined\n  };\n\n  var err, res;\n  return new Q(sdk.options.ajaxRequest(method, url, ajaxOptions))\n    .then(function(resp) {\n      res = resp.responseText;\n      if (res && util.isString(res)) {\n        res = JSON.parse(res);\n      }\n\n      if (saveAuthnState) {\n        if (!res.stateToken) {\n          cookies.deleteCookie(config.STATE_TOKEN_COOKIE_NAME);\n        }\n      }\n\n      if (res && res.stateToken && res.expiresAt) {\n        cookies.setCookie(config.STATE_TOKEN_COOKIE_NAME, res.stateToken, res.expiresAt);\n      }\n\n      if (res && options.cacheResponse) {\n        httpCache.updateStorage(url, {\n          expiresAt: Math.floor(Date.now()/1000) + config.DEFAULT_CACHE_DURATION,\n          response: res\n        });\n      }\n\n      return res;\n    })\n    .fail(function(resp) {\n      var serverErr = resp.responseText || {};\n      if (util.isString(serverErr)) {\n        try {\n          serverErr = JSON.parse(serverErr);\n        } catch (e) {\n          serverErr = {\n            errorSummary: 'Unknown error'\n          };\n        }\n      }\n\n      if (resp.status >= 500) {\n        serverErr.errorSummary = 'Unknown error';\n      }\n\n      if (sdk.options.transformErrorXHR) {\n        resp = sdk.options.transformErrorXHR(util.clone(resp));\n      }\n\n      err = new AuthApiError(serverErr, resp);\n\n      if (err.errorCode === 'E0000011') {\n        cookies.deleteCookie(config.STATE_TOKEN_COOKIE_NAME);\n      }\n\n      throw err;\n    });\n}\n\nfunction get(sdk, url, options) {\n  url = util.isAbsoluteUrl(url) ? url : sdk.options.url + url;\n  var getOptions = {\n    url: url,\n    method: 'GET'\n  };\n  util.extend(getOptions, options);\n  return httpRequest(sdk, getOptions);\n}\n\nfunction post(sdk, url, args, options) {\n  url = util.isAbsoluteUrl(url) ? url : sdk.options.url + url;\n  var postOptions = {\n    url: url,\n    method: 'POST',\n    args: args,\n    saveAuthnState: true\n  };\n  util.extend(postOptions, options);\n  return httpRequest(sdk, postOptions);\n}\n\nmodule.exports = {\n  get: get,\n  post: post,\n  httpRequest: httpRequest\n};\n"]},"metadata":{},"sourceType":"script"}